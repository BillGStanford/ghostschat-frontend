{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\natol\\\\OneDrive\\\\Desktop\\\\ghostschat\\\\ghostschat-frontend\\\\src\\\\components\\\\CallRoom.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef, useCallback } from 'react';\nimport { Mic, MicOff, Users, Phone, PhoneOff, Volume2, VolumeX, Settings } from 'lucide-react';\nimport Peer from 'simple-peer';\nimport { THEMES } from '../constants';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CallRoom = ({\n  socket,\n  roomId,\n  username,\n  users,\n  callState\n}) => {\n  _s();\n  const [participants, setParticipants] = useState([]);\n  const [isMuted, setIsMuted] = useState(false);\n  const [isDeafened, setIsDeafened] = useState(false);\n  const [speakingUsers, setSpeakingUsers] = useState(new Set());\n  const [connectionQuality, setConnectionQuality] = useState({});\n  const [callStartTime, setCallStartTime] = useState(null);\n  const [callDuration, setCallDuration] = useState(0);\n  const userAudio = useRef(null);\n  const peersRef = useRef([]);\n  const streamRef = useRef(null);\n  const audioContextRef = useRef(null);\n  const analyserRef = useRef(null);\n  const speakingTimeoutRef = useRef({});\n  const currentTheme = THEMES.default;\n\n  // Generate profile picture from username\n  const generateProfilePicture = username => {\n    const colors = ['#FF6B6B', '#4ECDC4', '#45B7D1', '#96CEB4', '#FECA57', '#FF9FF3', '#54A0FF', '#5F27CD', '#00D2D3', '#FF9F43'];\n    const firstLetter = (username === null || username === void 0 ? void 0 : username.charAt(0).toUpperCase()) || '?';\n    const colorIndex = (username === null || username === void 0 ? void 0 : username.charCodeAt(0)) % colors.length || 0;\n    return {\n      letter: firstLetter,\n      color: colors[colorIndex]\n    };\n  };\n\n  // Voice activity detection\n  const setupVoiceActivityDetection = useCallback((stream, peerID) => {\n    try {\n      const audioContext = new (window.AudioContext || window.webkitAudioContext)();\n      const analyser = audioContext.createAnalyser();\n      const microphone = audioContext.createMediaStreamSource(stream);\n      analyser.fftSize = 512;\n      analyser.minDecibels = -70;\n      analyser.maxDecibels = -10;\n      analyser.smoothingTimeConstant = 0.85;\n      microphone.connect(analyser);\n      const bufferLength = analyser.frequencyBinCount;\n      const dataArray = new Uint8Array(bufferLength);\n      const checkAudioLevel = () => {\n        analyser.getByteFrequencyData(dataArray);\n        const average = dataArray.reduce((a, b) => a + b) / bufferLength;\n        if (average > 15) {\n          // Threshold for speaking\n          setSpeakingUsers(prev => new Set([...prev, peerID]));\n\n          // Clear existing timeout\n          if (speakingTimeoutRef.current[peerID]) {\n            clearTimeout(speakingTimeoutRef.current[peerID]);\n          }\n\n          // Set new timeout to remove speaking indicator\n          speakingTimeoutRef.current[peerID] = setTimeout(() => {\n            setSpeakingUsers(prev => {\n              const newSet = new Set(prev);\n              newSet.delete(peerID);\n              return newSet;\n            });\n          }, 500);\n        }\n        if (!audioContext.state === 'closed') {\n          requestAnimationFrame(checkAudioLevel);\n        }\n      };\n      checkAudioLevel();\n      return () => {\n        microphone.disconnect();\n        audioContext.close();\n      };\n    } catch (err) {\n      console.error('Voice activity detection setup failed:', err);\n    }\n  }, []);\n\n  // Cleanup a specific peer\n  const cleanupPeer = useCallback(peerID => {\n    const peerObj = peersRef.current.find(p => p.peerID === peerID);\n    if (peerObj) {\n      peerObj.peer.destroy();\n      peersRef.current = peersRef.current.filter(p => p.peerID !== peerID);\n    }\n\n    // Clear speaking timeout\n    if (speakingTimeoutRef.current[peerID]) {\n      clearTimeout(speakingTimeoutRef.current[peerID]);\n      delete speakingTimeoutRef.current[peerID];\n    }\n\n    // Remove from speaking users\n    setSpeakingUsers(prev => {\n      const newSet = new Set(prev);\n      newSet.delete(peerID);\n      return newSet;\n    });\n  }, []);\n\n  // Full cleanup\n  const cleanup = useCallback(() => {\n    if (streamRef.current) {\n      streamRef.current.getTracks().forEach(track => track.stop());\n      streamRef.current = null;\n    }\n    peersRef.current.forEach(({\n      peer\n    }) => peer.destroy());\n    peersRef.current = [];\n    if (userAudio.current) {\n      userAudio.current.srcObject = null;\n    }\n    if (audioContextRef.current) {\n      audioContextRef.current.close();\n    }\n\n    // Clear all speaking timeouts\n    Object.values(speakingTimeoutRef.current).forEach(timeout => clearTimeout(timeout));\n    speakingTimeoutRef.current = {};\n    setSpeakingUsers(new Set());\n  }, []);\n  const createPeer = useCallback((userToSignal, callerID, stream) => {\n    const existingPeer = peersRef.current.find(p => p.peerID === userToSignal);\n    if (existingPeer) return existingPeer.peer;\n    const peer = new Peer({\n      initiator: true,\n      trickle: true,\n      stream,\n      config: {\n        iceServers: [{\n          urls: 'stun:stun.l.google.com:19302'\n        }, {\n          urls: 'stun:stun1.l.google.com:19302'\n        }, {\n          urls: 'stun:stun2.l.google.com:19302'\n        }]\n      }\n    });\n    peer.on('signal', signal => {\n      socket.emit('callSignal', {\n        roomId,\n        signal,\n        to: userToSignal\n      });\n    });\n    peer.on('connect', () => {\n      console.log('Peer connected:', userToSignal);\n      updateParticipantStatus(userToSignal, 'connected');\n      setConnectionQuality(prev => ({\n        ...prev,\n        [userToSignal]: 'good'\n      }));\n    });\n    peer.on('stream', stream => {\n      // Create audio element for remote peer\n      const audio = document.createElement('audio');\n      audio.srcObject = stream;\n      audio.autoplay = true;\n      audio.volume = isDeafened ? 0 : 1;\n      document.body.appendChild(audio);\n\n      // Setup voice activity detection for remote peer\n      setupVoiceActivityDetection(stream, userToSignal);\n\n      // Store audio element reference for cleanup\n      peer.audioElement = audio;\n    });\n    peer.on('error', err => {\n      console.error('Peer error:', err);\n      updateParticipantStatus(userToSignal, 'disconnected');\n      setConnectionQuality(prev => ({\n        ...prev,\n        [userToSignal]: 'poor'\n      }));\n      cleanupPeer(userToSignal);\n    });\n    peer.on('close', () => {\n      updateParticipantStatus(userToSignal, 'disconnected');\n      if (peer.audioElement) {\n        document.body.removeChild(peer.audioElement);\n      }\n      cleanupPeer(userToSignal);\n    });\n    return peer;\n  }, [socket, roomId, cleanupPeer, isDeafened, setupVoiceActivityDetection]);\n  const addPeer = useCallback((incomingSignal, callerID, stream) => {\n    const existingPeer = peersRef.current.find(p => p.peerID === callerID);\n    if (existingPeer) return existingPeer.peer;\n    const peer = new Peer({\n      initiator: false,\n      trickle: true,\n      stream,\n      config: {\n        iceServers: [{\n          urls: 'stun:stun.l.google.com:19302'\n        }, {\n          urls: 'stun:stun1.l.google.com:19302'\n        }, {\n          urls: 'stun:stun2.l.google.com:19302'\n        }]\n      }\n    });\n    peer.on('signal', signal => {\n      socket.emit('callSignal', {\n        roomId,\n        signal,\n        to: callerID\n      });\n    });\n    peer.on('connect', () => {\n      console.log('Peer connected:', callerID);\n      updateParticipantStatus(callerID, 'connected');\n      setConnectionQuality(prev => ({\n        ...prev,\n        [callerID]: 'good'\n      }));\n    });\n    peer.on('stream', stream => {\n      // Create audio element for remote peer\n      const audio = document.createElement('audio');\n      audio.srcObject = stream;\n      audio.autoplay = true;\n      audio.volume = isDeafened ? 0 : 1;\n      document.body.appendChild(audio);\n\n      // Setup voice activity detection for remote peer\n      setupVoiceActivityDetection(stream, callerID);\n\n      // Store audio element reference for cleanup\n      peer.audioElement = audio;\n    });\n    peer.on('error', err => {\n      console.error('Peer error:', err);\n      updateParticipantStatus(callerID, 'disconnected');\n      setConnectionQuality(prev => ({\n        ...prev,\n        [callerID]: 'poor'\n      }));\n      cleanupPeer(callerID);\n    });\n    peer.on('close', () => {\n      updateParticipantStatus(callerID, 'disconnected');\n      if (peer.audioElement) {\n        document.body.removeChild(peer.audioElement);\n      }\n      cleanupPeer(callerID);\n    });\n\n    // Handle signaling with retries for stability\n    const signalWithRetry = (retryCount = 0) => {\n      try {\n        peer.signal(incomingSignal);\n      } catch (err) {\n        console.error('Signaling error, retrying...', err);\n        if (peer.destroyed || retryCount >= 3) return;\n        setTimeout(() => signalWithRetry(retryCount + 1), 1000);\n      }\n    };\n    signalWithRetry();\n    return peer;\n  }, [socket, roomId, cleanupPeer, isDeafened, setupVoiceActivityDetection]);\n\n  // Update participant connection status\n  const updateParticipantStatus = (peerID, status) => {\n    setParticipants(prev => prev.map(p => p.peerID === peerID ? {\n      ...p,\n      connectionStatus: status\n    } : p));\n  };\n\n  // Get all participants including connection status\n  const updateAllParticipants = useCallback(() => {\n    if (!callState || !callState.participants) return;\n\n    // Start with current user\n    const allParticipants = [{\n      peerID: socket.id,\n      username,\n      isSelf: true,\n      connectionStatus: 'connected'\n    }];\n\n    // Add all call participants\n    callState.participants.forEach(participantId => {\n      if (participantId !== socket.id) {\n        const existingPeer = peersRef.current.find(p => p.peerID === participantId);\n        const existingParticipant = allParticipants.find(p => p.peerID === participantId);\n        if (!existingParticipant) {\n          var _users$find;\n          allParticipants.push({\n            peerID: participantId,\n            username: ((_users$find = users.find(u => u.id === participantId)) === null || _users$find === void 0 ? void 0 : _users$find.username) || 'Unknown',\n            isSelf: false,\n            connectionStatus: existingPeer ? 'connected' : 'connecting'\n          });\n        }\n      }\n    });\n    setParticipants(allParticipants);\n  }, [socket.id, username, callState, users]);\n\n  // Format call duration\n  const formatCallDuration = seconds => {\n    const hours = Math.floor(seconds / 3600);\n    const minutes = Math.floor(seconds % 3600 / 60);\n    const secs = seconds % 60;\n    if (hours > 0) {\n      return `${hours}:${minutes.toString().padStart(2, '0')}:${secs.toString().padStart(2, '0')}`;\n    }\n    return `${minutes}:${secs.toString().padStart(2, '0')}`;\n  };\n  useEffect(() => {\n    const initCall = async () => {\n      try {\n        const stream = await navigator.mediaDevices.getUserMedia({\n          audio: {\n            echoCancellation: true,\n            noiseSuppression: true,\n            autoGainControl: true,\n            sampleRate: 44100\n          }\n        });\n        streamRef.current = stream;\n        if (userAudio.current) {\n          userAudio.current.srcObject = stream;\n        }\n\n        // Setup voice activity detection for self\n        setupVoiceActivityDetection(stream, socket.id);\n\n        // Initialize all participants\n        updateAllParticipants();\n\n        // Set call start time\n        setCallStartTime(Date.now());\n\n        // Create peer connections for existing participants\n        if (callState && callState.participants) {\n          callState.participants.filter(participantId => participantId !== socket.id).forEach(participantId => {\n            var _users$find2;\n            const peer = createPeer(participantId, socket.id, stream);\n            peersRef.current.push({\n              peerID: participantId,\n              peer,\n              username: ((_users$find2 = users.find(u => u.id === participantId)) === null || _users$find2 === void 0 ? void 0 : _users$find2.username) || 'Unknown'\n            });\n          });\n        }\n      } catch (err) {\n        console.error('Error accessing media devices:', err);\n      }\n    };\n    const handleCallSignal = ({\n      signal,\n      from\n    }) => {\n      if (!streamRef.current) return;\n      const peerObj = peersRef.current.find(p => p.peerID === from);\n      if (peerObj) {\n        try {\n          peerObj.peer.signal(signal);\n        } catch (err) {\n          console.error('Error signaling existing peer:', err);\n          updateParticipantStatus(from, 'disconnected');\n          cleanupPeer(from);\n        }\n      } else {\n        var _users$find3;\n        const peer = addPeer(signal, from, streamRef.current);\n        peersRef.current.push({\n          peerID: from,\n          peer,\n          username: ((_users$find3 = users.find(u => u.id === from)) === null || _users$find3 === void 0 ? void 0 : _users$find3.username) || 'Unknown'\n        });\n      }\n      updateAllParticipants();\n    };\n    const handleParticipantJoined = ({\n      userId,\n      username: joinedUsername\n    }) => {\n      if (userId !== socket.id && streamRef.current) {\n        const peer = createPeer(userId, socket.id, streamRef.current);\n        peersRef.current.push({\n          peerID: userId,\n          peer,\n          username: joinedUsername\n        });\n      }\n      updateAllParticipants();\n    };\n    const handleParticipantLeft = ({\n      userId\n    }) => {\n      cleanupPeer(userId);\n      updateParticipantStatus(userId, 'left');\n    };\n    const handleCallEnded = () => {\n      cleanup();\n      setCallStartTime(null);\n      setCallDuration(0);\n    };\n    initCall();\n    socket.on('callSignal', handleCallSignal);\n    socket.on('callParticipantJoined', handleParticipantJoined);\n    socket.on('callParticipantLeft', handleParticipantLeft);\n    socket.on('callEnded', handleCallEnded);\n\n    // Periodic participant list refresh\n    const interval = setInterval(updateAllParticipants, 5000);\n    return () => {\n      cleanup();\n      clearInterval(interval);\n      socket.off('callSignal', handleCallSignal);\n      socket.off('callParticipantJoined', handleParticipantJoined);\n      socket.off('callParticipantLeft', handleParticipantLeft);\n      socket.off('callEnded', handleCallEnded);\n    };\n  }, [socket, roomId, callState, users, createPeer, addPeer, cleanup, cleanupPeer, updateAllParticipants, setupVoiceActivityDetection]);\n\n  // Update call duration\n  useEffect(() => {\n    if (!callStartTime) return;\n    const interval = setInterval(() => {\n      setCallDuration(Math.floor((Date.now() - callStartTime) / 1000));\n    }, 1000);\n    return () => clearInterval(interval);\n  }, [callStartTime]);\n\n  // Update audio elements volume when deafened state changes\n  useEffect(() => {\n    peersRef.current.forEach(({\n      peer\n    }) => {\n      if (peer.audioElement) {\n        peer.audioElement.volume = isDeafened ? 0 : 1;\n      }\n    });\n  }, [isDeafened]);\n  const toggleMute = () => {\n    if (streamRef.current) {\n      streamRef.current.getAudioTracks().forEach(track => {\n        track.enabled = !track.enabled;\n      });\n      setIsMuted(!isMuted);\n    }\n  };\n  const toggleDeafen = () => {\n    setIsDeafened(!isDeafened);\n    if (!isDeafened) {\n      setIsMuted(true);\n      if (streamRef.current) {\n        streamRef.current.getAudioTracks().forEach(track => {\n          track.enabled = false;\n        });\n      }\n    }\n  };\n  const leaveCall = () => {\n    socket.emit('leaveCall', {\n      roomId\n    });\n    cleanup();\n  };\n  const getConnectionStatusColor = status => {\n    switch (status) {\n      case 'connected':\n        return '#4ade80';\n      case 'connecting':\n        return '#fbbf24';\n      case 'poor':\n        return '#f97316';\n      case 'left':\n        return '#6b7280';\n      default:\n        return '#f87171';\n    }\n  };\n  const getConnectionStatusText = status => {\n    switch (status) {\n      case 'connected':\n        return 'Connected';\n      case 'connecting':\n        return 'Connecting...';\n      case 'poor':\n        return 'Poor Connection';\n      case 'left':\n        return 'Left';\n      default:\n        return 'Disconnected';\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `flex-1 ${currentTheme.card} overflow-hidden flex flex-col`,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p-4 border-b border-gray-700\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center justify-between\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center space-x-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center space-x-2\",\n            children: [/*#__PURE__*/_jsxDEV(Phone, {\n              className: \"w-5 h-5 text-green-400\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 504,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n              className: `text-lg font-bold ${currentTheme.textPrimary} gradient-text`,\n              children: \"Voice Call\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 505,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 503,\n            columnNumber: 13\n          }, this), callStartTime && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-sm text-gray-400\",\n            children: formatCallDuration(callDuration)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 510,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 502,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center space-x-2\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-sm text-gray-400 flex items-center space-x-1\",\n            children: [/*#__PURE__*/_jsxDEV(Users, {\n              className: \"w-4 h-4\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 517,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: participants.length\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 518,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 516,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 515,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 501,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 500,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-1 p-4 overflow-y-auto\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-4\",\n        children: participants.map(({\n          peerID,\n          username: participantUsername,\n          isSelf,\n          connectionStatus\n        }) => {\n          const profilePic = generateProfilePicture(participantUsername);\n          const isSpeaking = speakingUsers.has(peerID);\n          const quality = connectionQuality[peerID] || 'good';\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `\n                  relative p-4 rounded-xl transition-all duration-200 border-2\n                  ${isSpeaking ? 'border-green-400 bg-green-900/20 shadow-lg shadow-green-400/20' : 'border-gray-600 bg-gray-800/50'}\n                  ${isSelf ? 'ring-2 ring-blue-400' : ''}\n                  hover:border-gray-500 transition-colors\n                `,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex flex-col items-center space-y-3\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: `\n                      w-16 h-16 rounded-full flex items-center justify-center text-xl font-bold text-white\n                      ${isSpeaking ? 'ring-4 ring-green-400 ring-opacity-75' : ''}\n                      transition-all duration-200\n                    `,\n                style: {\n                  backgroundColor: profilePic.color\n                },\n                children: profilePic.letter\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 547,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-center\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: `${currentTheme.textPrimary} font-medium text-sm`,\n                  children: [participantUsername, isSelf && /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"text-blue-400 ml-1\",\n                    children: \"(You)\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 562,\n                    columnNumber: 34\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 560,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"flex items-center justify-center space-x-1 mt-1\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"w-2 h-2 rounded-full\",\n                    style: {\n                      backgroundColor: getConnectionStatusColor(connectionStatus)\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 567,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"text-xs\",\n                    style: {\n                      color: getConnectionStatusColor(connectionStatus)\n                    },\n                    children: getConnectionStatusText(connectionStatus)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 571,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 566,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 559,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 546,\n              columnNumber: 17\n            }, this), isSpeaking && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"absolute -top-2 -right-2 w-6 h-6 bg-green-400 rounded-full flex items-center justify-center\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"w-3 h-3 bg-white rounded-full animate-pulse\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 584,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 583,\n              columnNumber: 19\n            }, this), isSelf && isMuted && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"absolute -bottom-2 -right-2 w-6 h-6 bg-red-500 rounded-full flex items-center justify-center\",\n              children: /*#__PURE__*/_jsxDEV(MicOff, {\n                className: \"w-3 h-3 text-white\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 591,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 590,\n              columnNumber: 19\n            }, this)]\n          }, `${peerID}-${participantUsername}`, true, {\n            fileName: _jsxFileName,\n            lineNumber: 533,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 526,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 525,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p-4 border-t border-gray-700\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center justify-center space-x-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: toggleMute,\n          className: `\n              p-3 rounded-full transition-all duration-200 flex items-center space-x-2\n              ${isMuted ? 'bg-red-500 hover:bg-red-600 text-white' : 'bg-gray-700 hover:bg-gray-600 text-gray-200'}\n            `,\n          children: isMuted ? /*#__PURE__*/_jsxDEV(MicOff, {\n            className: \"w-5 h-5\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 613,\n            columnNumber: 24\n          }, this) : /*#__PURE__*/_jsxDEV(Mic, {\n            className: \"w-5 h-5\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 613,\n            columnNumber: 57\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 603,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: toggleDeafen,\n          className: `\n              p-3 rounded-full transition-all duration-200 flex items-center space-x-2\n              ${isDeafened ? 'bg-red-500 hover:bg-red-600 text-white' : 'bg-gray-700 hover:bg-gray-600 text-gray-200'}\n            `,\n          children: isDeafened ? /*#__PURE__*/_jsxDEV(VolumeX, {\n            className: \"w-5 h-5\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 626,\n            columnNumber: 27\n          }, this) : /*#__PURE__*/_jsxDEV(Volume2, {\n            className: \"w-5 h-5\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 626,\n            columnNumber: 61\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 616,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: leaveCall,\n          className: \"p-3 bg-red-500 hover:bg-red-600 text-white rounded-full transition-all duration-200\",\n          children: /*#__PURE__*/_jsxDEV(PhoneOff, {\n            className: \"w-5 h-5\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 633,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 629,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 602,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center justify-center space-x-12 mt-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-xs text-gray-400\",\n          children: isMuted ? 'Unmute' : 'Mute'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 639,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-xs text-gray-400\",\n          children: isDeafened ? 'Undeafen' : 'Deafen'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 642,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-xs text-gray-400\",\n          children: \"Leave\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 645,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 638,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 601,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"audio\", {\n      ref: userAudio,\n      autoPlay: true,\n      muted: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 652,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 498,\n    columnNumber: 5\n  }, this);\n};\n_s(CallRoom, \"am9VE2Uhc5NyF8cJAPMICBGucTw=\");\n_c = CallRoom;\nexport default CallRoom;\nvar _c;\n$RefreshReg$(_c, \"CallRoom\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useCallback","Mic","MicOff","Users","Phone","PhoneOff","Volume2","VolumeX","Settings","Peer","THEMES","jsxDEV","_jsxDEV","CallRoom","socket","roomId","username","users","callState","_s","participants","setParticipants","isMuted","setIsMuted","isDeafened","setIsDeafened","speakingUsers","setSpeakingUsers","Set","connectionQuality","setConnectionQuality","callStartTime","setCallStartTime","callDuration","setCallDuration","userAudio","peersRef","streamRef","audioContextRef","analyserRef","speakingTimeoutRef","currentTheme","default","generateProfilePicture","colors","firstLetter","charAt","toUpperCase","colorIndex","charCodeAt","length","letter","color","setupVoiceActivityDetection","stream","peerID","audioContext","window","AudioContext","webkitAudioContext","analyser","createAnalyser","microphone","createMediaStreamSource","fftSize","minDecibels","maxDecibels","smoothingTimeConstant","connect","bufferLength","frequencyBinCount","dataArray","Uint8Array","checkAudioLevel","getByteFrequencyData","average","reduce","a","b","prev","current","clearTimeout","setTimeout","newSet","delete","state","requestAnimationFrame","disconnect","close","err","console","error","cleanupPeer","peerObj","find","p","peer","destroy","filter","cleanup","getTracks","forEach","track","stop","srcObject","Object","values","timeout","createPeer","userToSignal","callerID","existingPeer","initiator","trickle","config","iceServers","urls","on","signal","emit","to","log","updateParticipantStatus","audio","document","createElement","autoplay","volume","body","appendChild","audioElement","removeChild","addPeer","incomingSignal","signalWithRetry","retryCount","destroyed","status","map","connectionStatus","updateAllParticipants","allParticipants","id","isSelf","participantId","existingParticipant","_users$find","push","u","formatCallDuration","seconds","hours","Math","floor","minutes","secs","toString","padStart","initCall","navigator","mediaDevices","getUserMedia","echoCancellation","noiseSuppression","autoGainControl","sampleRate","Date","now","_users$find2","handleCallSignal","from","_users$find3","handleParticipantJoined","userId","joinedUsername","handleParticipantLeft","handleCallEnded","interval","setInterval","clearInterval","off","toggleMute","getAudioTracks","enabled","toggleDeafen","leaveCall","getConnectionStatusColor","getConnectionStatusText","className","card","children","fileName","_jsxFileName","lineNumber","columnNumber","textPrimary","participantUsername","profilePic","isSpeaking","has","quality","style","backgroundColor","onClick","ref","autoPlay","muted","_c","$RefreshReg$"],"sources":["C:/Users/natol/OneDrive/Desktop/ghostschat/ghostschat-frontend/src/components/CallRoom.js"],"sourcesContent":["import React, { useState, useEffect, useRef, useCallback } from 'react';\r\nimport { Mic, MicOff, Users, Phone, PhoneOff, Volume2, VolumeX, Settings } from 'lucide-react';\r\nimport Peer from 'simple-peer';\r\nimport { THEMES } from '../constants';\r\n\r\nconst CallRoom = ({ socket, roomId, username, users, callState }) => {\r\n  const [participants, setParticipants] = useState([]);\r\n  const [isMuted, setIsMuted] = useState(false);\r\n  const [isDeafened, setIsDeafened] = useState(false);\r\n  const [speakingUsers, setSpeakingUsers] = useState(new Set());\r\n  const [connectionQuality, setConnectionQuality] = useState({});\r\n  const [callStartTime, setCallStartTime] = useState(null);\r\n  const [callDuration, setCallDuration] = useState(0);\r\n  \r\n  const userAudio = useRef(null);\r\n  const peersRef = useRef([]);\r\n  const streamRef = useRef(null);\r\n  const audioContextRef = useRef(null);\r\n  const analyserRef = useRef(null);\r\n  const speakingTimeoutRef = useRef({});\r\n  const currentTheme = THEMES.default;\r\n\r\n  // Generate profile picture from username\r\n  const generateProfilePicture = (username) => {\r\n    const colors = [\r\n      '#FF6B6B', '#4ECDC4', '#45B7D1', '#96CEB4', '#FECA57',\r\n      '#FF9FF3', '#54A0FF', '#5F27CD', '#00D2D3', '#FF9F43'\r\n    ];\r\n    const firstLetter = username?.charAt(0).toUpperCase() || '?';\r\n    const colorIndex = username?.charCodeAt(0) % colors.length || 0;\r\n    return { letter: firstLetter, color: colors[colorIndex] };\r\n  };\r\n\r\n  // Voice activity detection\r\n  const setupVoiceActivityDetection = useCallback((stream, peerID) => {\r\n    try {\r\n      const audioContext = new (window.AudioContext || window.webkitAudioContext)();\r\n      const analyser = audioContext.createAnalyser();\r\n      const microphone = audioContext.createMediaStreamSource(stream);\r\n      \r\n      analyser.fftSize = 512;\r\n      analyser.minDecibels = -70;\r\n      analyser.maxDecibels = -10;\r\n      analyser.smoothingTimeConstant = 0.85;\r\n      \r\n      microphone.connect(analyser);\r\n      \r\n      const bufferLength = analyser.frequencyBinCount;\r\n      const dataArray = new Uint8Array(bufferLength);\r\n      \r\n      const checkAudioLevel = () => {\r\n        analyser.getByteFrequencyData(dataArray);\r\n        const average = dataArray.reduce((a, b) => a + b) / bufferLength;\r\n        \r\n        if (average > 15) { // Threshold for speaking\r\n          setSpeakingUsers(prev => new Set([...prev, peerID]));\r\n          \r\n          // Clear existing timeout\r\n          if (speakingTimeoutRef.current[peerID]) {\r\n            clearTimeout(speakingTimeoutRef.current[peerID]);\r\n          }\r\n          \r\n          // Set new timeout to remove speaking indicator\r\n          speakingTimeoutRef.current[peerID] = setTimeout(() => {\r\n            setSpeakingUsers(prev => {\r\n              const newSet = new Set(prev);\r\n              newSet.delete(peerID);\r\n              return newSet;\r\n            });\r\n          }, 500);\r\n        }\r\n        \r\n        if (!audioContext.state === 'closed') {\r\n          requestAnimationFrame(checkAudioLevel);\r\n        }\r\n      };\r\n      \r\n      checkAudioLevel();\r\n      \r\n      return () => {\r\n        microphone.disconnect();\r\n        audioContext.close();\r\n      };\r\n    } catch (err) {\r\n      console.error('Voice activity detection setup failed:', err);\r\n    }\r\n  }, []);\r\n\r\n  // Cleanup a specific peer\r\n  const cleanupPeer = useCallback((peerID) => {\r\n    const peerObj = peersRef.current.find(p => p.peerID === peerID);\r\n    if (peerObj) {\r\n      peerObj.peer.destroy();\r\n      peersRef.current = peersRef.current.filter(p => p.peerID !== peerID);\r\n    }\r\n    \r\n    // Clear speaking timeout\r\n    if (speakingTimeoutRef.current[peerID]) {\r\n      clearTimeout(speakingTimeoutRef.current[peerID]);\r\n      delete speakingTimeoutRef.current[peerID];\r\n    }\r\n    \r\n    // Remove from speaking users\r\n    setSpeakingUsers(prev => {\r\n      const newSet = new Set(prev);\r\n      newSet.delete(peerID);\r\n      return newSet;\r\n    });\r\n  }, []);\r\n\r\n  // Full cleanup\r\n  const cleanup = useCallback(() => {\r\n    if (streamRef.current) {\r\n      streamRef.current.getTracks().forEach(track => track.stop());\r\n      streamRef.current = null;\r\n    }\r\n    \r\n    peersRef.current.forEach(({ peer }) => peer.destroy());\r\n    peersRef.current = [];\r\n    \r\n    if (userAudio.current) {\r\n      userAudio.current.srcObject = null;\r\n    }\r\n    \r\n    if (audioContextRef.current) {\r\n      audioContextRef.current.close();\r\n    }\r\n    \r\n    // Clear all speaking timeouts\r\n    Object.values(speakingTimeoutRef.current).forEach(timeout => clearTimeout(timeout));\r\n    speakingTimeoutRef.current = {};\r\n    \r\n    setSpeakingUsers(new Set());\r\n  }, []);\r\n\r\n  const createPeer = useCallback((userToSignal, callerID, stream) => {\r\n    const existingPeer = peersRef.current.find(p => p.peerID === userToSignal);\r\n    if (existingPeer) return existingPeer.peer;\r\n\r\n    const peer = new Peer({\r\n      initiator: true,\r\n      trickle: true,\r\n      stream,\r\n      config: {\r\n        iceServers: [\r\n          { urls: 'stun:stun.l.google.com:19302' },\r\n          { urls: 'stun:stun1.l.google.com:19302' },\r\n          { urls: 'stun:stun2.l.google.com:19302' }\r\n        ]\r\n      }\r\n    });\r\n\r\n    peer.on('signal', signal => {\r\n      socket.emit('callSignal', { roomId, signal, to: userToSignal });\r\n    });\r\n\r\n    peer.on('connect', () => {\r\n      console.log('Peer connected:', userToSignal);\r\n      updateParticipantStatus(userToSignal, 'connected');\r\n      setConnectionQuality(prev => ({ ...prev, [userToSignal]: 'good' }));\r\n    });\r\n\r\n    peer.on('stream', stream => {\r\n      // Create audio element for remote peer\r\n      const audio = document.createElement('audio');\r\n      audio.srcObject = stream;\r\n      audio.autoplay = true;\r\n      audio.volume = isDeafened ? 0 : 1;\r\n      document.body.appendChild(audio);\r\n      \r\n      // Setup voice activity detection for remote peer\r\n      setupVoiceActivityDetection(stream, userToSignal);\r\n      \r\n      // Store audio element reference for cleanup\r\n      peer.audioElement = audio;\r\n    });\r\n\r\n    peer.on('error', err => {\r\n      console.error('Peer error:', err);\r\n      updateParticipantStatus(userToSignal, 'disconnected');\r\n      setConnectionQuality(prev => ({ ...prev, [userToSignal]: 'poor' }));\r\n      cleanupPeer(userToSignal);\r\n    });\r\n\r\n    peer.on('close', () => {\r\n      updateParticipantStatus(userToSignal, 'disconnected');\r\n      if (peer.audioElement) {\r\n        document.body.removeChild(peer.audioElement);\r\n      }\r\n      cleanupPeer(userToSignal);\r\n    });\r\n\r\n    return peer;\r\n  }, [socket, roomId, cleanupPeer, isDeafened, setupVoiceActivityDetection]);\r\n\r\n  const addPeer = useCallback((incomingSignal, callerID, stream) => {\r\n    const existingPeer = peersRef.current.find(p => p.peerID === callerID);\r\n    if (existingPeer) return existingPeer.peer;\r\n\r\n    const peer = new Peer({\r\n      initiator: false,\r\n      trickle: true,\r\n      stream,\r\n      config: {\r\n        iceServers: [\r\n          { urls: 'stun:stun.l.google.com:19302' },\r\n          { urls: 'stun:stun1.l.google.com:19302' },\r\n          { urls: 'stun:stun2.l.google.com:19302' }\r\n        ]\r\n      }\r\n    });\r\n\r\n    peer.on('signal', signal => {\r\n      socket.emit('callSignal', { roomId, signal, to: callerID });\r\n    });\r\n\r\n    peer.on('connect', () => {\r\n      console.log('Peer connected:', callerID);\r\n      updateParticipantStatus(callerID, 'connected');\r\n      setConnectionQuality(prev => ({ ...prev, [callerID]: 'good' }));\r\n    });\r\n\r\n    peer.on('stream', stream => {\r\n      // Create audio element for remote peer\r\n      const audio = document.createElement('audio');\r\n      audio.srcObject = stream;\r\n      audio.autoplay = true;\r\n      audio.volume = isDeafened ? 0 : 1;\r\n      document.body.appendChild(audio);\r\n      \r\n      // Setup voice activity detection for remote peer\r\n      setupVoiceActivityDetection(stream, callerID);\r\n      \r\n      // Store audio element reference for cleanup\r\n      peer.audioElement = audio;\r\n    });\r\n\r\n    peer.on('error', err => {\r\n      console.error('Peer error:', err);\r\n      updateParticipantStatus(callerID, 'disconnected');\r\n      setConnectionQuality(prev => ({ ...prev, [callerID]: 'poor' }));\r\n      cleanupPeer(callerID);\r\n    });\r\n\r\n    peer.on('close', () => {\r\n      updateParticipantStatus(callerID, 'disconnected');\r\n      if (peer.audioElement) {\r\n        document.body.removeChild(peer.audioElement);\r\n      }\r\n      cleanupPeer(callerID);\r\n    });\r\n\r\n    // Handle signaling with retries for stability\r\n    const signalWithRetry = (retryCount = 0) => {\r\n      try {\r\n        peer.signal(incomingSignal);\r\n      } catch (err) {\r\n        console.error('Signaling error, retrying...', err);\r\n        if (peer.destroyed || retryCount >= 3) return;\r\n        setTimeout(() => signalWithRetry(retryCount + 1), 1000);\r\n      }\r\n    };\r\n\r\n    signalWithRetry();\r\n    \r\n    return peer;\r\n  }, [socket, roomId, cleanupPeer, isDeafened, setupVoiceActivityDetection]);\r\n\r\n  // Update participant connection status\r\n  const updateParticipantStatus = (peerID, status) => {\r\n    setParticipants(prev => prev.map(p => \r\n      p.peerID === peerID ? { ...p, connectionStatus: status } : p\r\n    ));\r\n  };\r\n\r\n  // Get all participants including connection status\r\n  const updateAllParticipants = useCallback(() => {\r\n    if (!callState || !callState.participants) return;\r\n    \r\n    // Start with current user\r\n    const allParticipants = [{ \r\n      peerID: socket.id, \r\n      username,\r\n      isSelf: true,\r\n      connectionStatus: 'connected'\r\n    }];\r\n\r\n    // Add all call participants\r\n    callState.participants.forEach(participantId => {\r\n      if (participantId !== socket.id) {\r\n        const existingPeer = peersRef.current.find(p => p.peerID === participantId);\r\n        const existingParticipant = allParticipants.find(p => p.peerID === participantId);\r\n        \r\n        if (!existingParticipant) {\r\n          allParticipants.push({\r\n            peerID: participantId,\r\n            username: users.find(u => u.id === participantId)?.username || 'Unknown',\r\n            isSelf: false,\r\n            connectionStatus: existingPeer ? 'connected' : 'connecting'\r\n          });\r\n        }\r\n      }\r\n    });\r\n\r\n    setParticipants(allParticipants);\r\n  }, [socket.id, username, callState, users]);\r\n\r\n  // Format call duration\r\n  const formatCallDuration = (seconds) => {\r\n    const hours = Math.floor(seconds / 3600);\r\n    const minutes = Math.floor((seconds % 3600) / 60);\r\n    const secs = seconds % 60;\r\n    \r\n    if (hours > 0) {\r\n      return `${hours}:${minutes.toString().padStart(2, '0')}:${secs.toString().padStart(2, '0')}`;\r\n    }\r\n    return `${minutes}:${secs.toString().padStart(2, '0')}`;\r\n  };\r\n\r\n  useEffect(() => {\r\n    const initCall = async () => {\r\n      try {\r\n        const stream = await navigator.mediaDevices.getUserMedia({ \r\n          audio: {\r\n            echoCancellation: true,\r\n            noiseSuppression: true,\r\n            autoGainControl: true,\r\n            sampleRate: 44100\r\n          }\r\n        });\r\n        \r\n        streamRef.current = stream;\r\n        if (userAudio.current) {\r\n          userAudio.current.srcObject = stream;\r\n        }\r\n\r\n        // Setup voice activity detection for self\r\n        setupVoiceActivityDetection(stream, socket.id);\r\n\r\n        // Initialize all participants\r\n        updateAllParticipants();\r\n        \r\n        // Set call start time\r\n        setCallStartTime(Date.now());\r\n\r\n        // Create peer connections for existing participants\r\n        if (callState && callState.participants) {\r\n          callState.participants\r\n            .filter(participantId => participantId !== socket.id)\r\n            .forEach(participantId => {\r\n              const peer = createPeer(participantId, socket.id, stream);\r\n              peersRef.current.push({\r\n                peerID: participantId,\r\n                peer,\r\n                username: users.find(u => u.id === participantId)?.username || 'Unknown',\r\n              });\r\n            });\r\n        }\r\n\r\n      } catch (err) {\r\n        console.error('Error accessing media devices:', err);\r\n      }\r\n    };\r\n\r\n    const handleCallSignal = ({ signal, from }) => {\r\n      if (!streamRef.current) return;\r\n      \r\n      const peerObj = peersRef.current.find(p => p.peerID === from);\r\n      if (peerObj) {\r\n        try {\r\n          peerObj.peer.signal(signal);\r\n        } catch (err) {\r\n          console.error('Error signaling existing peer:', err);\r\n          updateParticipantStatus(from, 'disconnected');\r\n          cleanupPeer(from);\r\n        }\r\n      } else {\r\n        const peer = addPeer(signal, from, streamRef.current);\r\n        peersRef.current.push({\r\n          peerID: from,\r\n          peer,\r\n          username: users.find(u => u.id === from)?.username || 'Unknown',\r\n        });\r\n      }\r\n      updateAllParticipants();\r\n    };\r\n\r\n    const handleParticipantJoined = ({ userId, username: joinedUsername }) => {\r\n      if (userId !== socket.id && streamRef.current) {\r\n        const peer = createPeer(userId, socket.id, streamRef.current);\r\n        peersRef.current.push({\r\n          peerID: userId,\r\n          peer,\r\n          username: joinedUsername,\r\n        });\r\n      }\r\n      updateAllParticipants();\r\n    };\r\n\r\n    const handleParticipantLeft = ({ userId }) => {\r\n      cleanupPeer(userId);\r\n      updateParticipantStatus(userId, 'left');\r\n    };\r\n\r\n    const handleCallEnded = () => {\r\n      cleanup();\r\n      setCallStartTime(null);\r\n      setCallDuration(0);\r\n    };\r\n\r\n    initCall();\r\n\r\n    socket.on('callSignal', handleCallSignal);\r\n    socket.on('callParticipantJoined', handleParticipantJoined);\r\n    socket.on('callParticipantLeft', handleParticipantLeft);\r\n    socket.on('callEnded', handleCallEnded);\r\n\r\n    // Periodic participant list refresh\r\n    const interval = setInterval(updateAllParticipants, 5000);\r\n\r\n    return () => {\r\n      cleanup();\r\n      clearInterval(interval);\r\n      socket.off('callSignal', handleCallSignal);\r\n      socket.off('callParticipantJoined', handleParticipantJoined);\r\n      socket.off('callParticipantLeft', handleParticipantLeft);\r\n      socket.off('callEnded', handleCallEnded);\r\n    };\r\n  }, [socket, roomId, callState, users, createPeer, addPeer, cleanup, cleanupPeer, updateAllParticipants, setupVoiceActivityDetection]);\r\n\r\n  // Update call duration\r\n  useEffect(() => {\r\n    if (!callStartTime) return;\r\n    \r\n    const interval = setInterval(() => {\r\n      setCallDuration(Math.floor((Date.now() - callStartTime) / 1000));\r\n    }, 1000);\r\n    \r\n    return () => clearInterval(interval);\r\n  }, [callStartTime]);\r\n\r\n  // Update audio elements volume when deafened state changes\r\n  useEffect(() => {\r\n    peersRef.current.forEach(({ peer }) => {\r\n      if (peer.audioElement) {\r\n        peer.audioElement.volume = isDeafened ? 0 : 1;\r\n      }\r\n    });\r\n  }, [isDeafened]);\r\n\r\n  const toggleMute = () => {\r\n    if (streamRef.current) {\r\n      streamRef.current.getAudioTracks().forEach(track => {\r\n        track.enabled = !track.enabled;\r\n      });\r\n      setIsMuted(!isMuted);\r\n    }\r\n  };\r\n\r\n  const toggleDeafen = () => {\r\n    setIsDeafened(!isDeafened);\r\n    if (!isDeafened) {\r\n      setIsMuted(true);\r\n      if (streamRef.current) {\r\n        streamRef.current.getAudioTracks().forEach(track => {\r\n          track.enabled = false;\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  const leaveCall = () => {\r\n    socket.emit('leaveCall', { roomId });\r\n    cleanup();\r\n  };\r\n\r\n  const getConnectionStatusColor = (status) => {\r\n    switch (status) {\r\n      case 'connected': return '#4ade80';\r\n      case 'connecting': return '#fbbf24';\r\n      case 'poor': return '#f97316';\r\n      case 'left': return '#6b7280';\r\n      default: return '#f87171';\r\n    }\r\n  };\r\n\r\n  const getConnectionStatusText = (status) => {\r\n    switch (status) {\r\n      case 'connected': return 'Connected';\r\n      case 'connecting': return 'Connecting...';\r\n      case 'poor': return 'Poor Connection';\r\n      case 'left': return 'Left';\r\n      default: return 'Disconnected';\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={`flex-1 ${currentTheme.card} overflow-hidden flex flex-col`}>\r\n      {/* Header */}\r\n      <div className=\"p-4 border-b border-gray-700\">\r\n        <div className=\"flex items-center justify-between\">\r\n          <div className=\"flex items-center space-x-3\">\r\n            <div className=\"flex items-center space-x-2\">\r\n              <Phone className=\"w-5 h-5 text-green-400\" />\r\n              <h2 className={`text-lg font-bold ${currentTheme.textPrimary} gradient-text`}>\r\n                Voice Call\r\n              </h2>\r\n            </div>\r\n            {callStartTime && (\r\n              <div className=\"text-sm text-gray-400\">\r\n                {formatCallDuration(callDuration)}\r\n              </div>\r\n            )}\r\n          </div>\r\n          <div className=\"flex items-center space-x-2\">\r\n            <div className=\"text-sm text-gray-400 flex items-center space-x-1\">\r\n              <Users className=\"w-4 h-4\" />\r\n              <span>{participants.length}</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Participants Grid */}\r\n      <div className=\"flex-1 p-4 overflow-y-auto\">\r\n        <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-4\">\r\n          {participants.map(({ peerID, username: participantUsername, isSelf, connectionStatus }) => {\r\n            const profilePic = generateProfilePicture(participantUsername);\r\n            const isSpeaking = speakingUsers.has(peerID);\r\n            const quality = connectionQuality[peerID] || 'good';\r\n            \r\n            return (\r\n              <div \r\n                key={`${peerID}-${participantUsername}`}\r\n                className={`\r\n                  relative p-4 rounded-xl transition-all duration-200 border-2\r\n                  ${isSpeaking \r\n                    ? 'border-green-400 bg-green-900/20 shadow-lg shadow-green-400/20' \r\n                    : 'border-gray-600 bg-gray-800/50'\r\n                  }\r\n                  ${isSelf ? 'ring-2 ring-blue-400' : ''}\r\n                  hover:border-gray-500 transition-colors\r\n                `}\r\n              >\r\n                {/* Profile Picture */}\r\n                <div className=\"flex flex-col items-center space-y-3\">\r\n                  <div \r\n                    className={`\r\n                      w-16 h-16 rounded-full flex items-center justify-center text-xl font-bold text-white\r\n                      ${isSpeaking ? 'ring-4 ring-green-400 ring-opacity-75' : ''}\r\n                      transition-all duration-200\r\n                    `}\r\n                    style={{ backgroundColor: profilePic.color }}\r\n                  >\r\n                    {profilePic.letter}\r\n                  </div>\r\n                  \r\n                  {/* Username */}\r\n                  <div className=\"text-center\">\r\n                    <div className={`${currentTheme.textPrimary} font-medium text-sm`}>\r\n                      {participantUsername}\r\n                      {isSelf && <span className=\"text-blue-400 ml-1\">(You)</span>}\r\n                    </div>\r\n                    \r\n                    {/* Connection Status */}\r\n                    <div className=\"flex items-center justify-center space-x-1 mt-1\">\r\n                      <div \r\n                        className=\"w-2 h-2 rounded-full\"\r\n                        style={{ backgroundColor: getConnectionStatusColor(connectionStatus) }}\r\n                      />\r\n                      <span \r\n                        className=\"text-xs\"\r\n                        style={{ color: getConnectionStatusColor(connectionStatus) }}\r\n                      >\r\n                        {getConnectionStatusText(connectionStatus)}\r\n                      </span>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                {/* Speaking Indicator */}\r\n                {isSpeaking && (\r\n                  <div className=\"absolute -top-2 -right-2 w-6 h-6 bg-green-400 rounded-full flex items-center justify-center\">\r\n                    <div className=\"w-3 h-3 bg-white rounded-full animate-pulse\" />\r\n                  </div>\r\n                )}\r\n\r\n                {/* Mute Indicator */}\r\n                {isSelf && isMuted && (\r\n                  <div className=\"absolute -bottom-2 -right-2 w-6 h-6 bg-red-500 rounded-full flex items-center justify-center\">\r\n                    <MicOff className=\"w-3 h-3 text-white\" />\r\n                  </div>\r\n                )}\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n\r\n      {/* Controls */}\r\n      <div className=\"p-4 border-t border-gray-700\">\r\n        <div className=\"flex items-center justify-center space-x-3\">\r\n          <button\r\n            onClick={toggleMute}\r\n            className={`\r\n              p-3 rounded-full transition-all duration-200 flex items-center space-x-2\r\n              ${isMuted \r\n                ? 'bg-red-500 hover:bg-red-600 text-white' \r\n                : 'bg-gray-700 hover:bg-gray-600 text-gray-200'\r\n              }\r\n            `}\r\n          >\r\n            {isMuted ? <MicOff className=\"w-5 h-5\" /> : <Mic className=\"w-5 h-5\" />}\r\n          </button>\r\n          \r\n          <button\r\n            onClick={toggleDeafen}\r\n            className={`\r\n              p-3 rounded-full transition-all duration-200 flex items-center space-x-2\r\n              ${isDeafened \r\n                ? 'bg-red-500 hover:bg-red-600 text-white' \r\n                : 'bg-gray-700 hover:bg-gray-600 text-gray-200'\r\n              }\r\n            `}\r\n          >\r\n            {isDeafened ? <VolumeX className=\"w-5 h-5\" /> : <Volume2 className=\"w-5 h-5\" />}\r\n          </button>\r\n          \r\n          <button\r\n            onClick={leaveCall}\r\n            className=\"p-3 bg-red-500 hover:bg-red-600 text-white rounded-full transition-all duration-200\"\r\n          >\r\n            <PhoneOff className=\"w-5 h-5\" />\r\n          </button>\r\n        </div>\r\n        \r\n        {/* Control Labels */}\r\n        <div className=\"flex items-center justify-center space-x-12 mt-2\">\r\n          <span className=\"text-xs text-gray-400\">\r\n            {isMuted ? 'Unmute' : 'Mute'}\r\n          </span>\r\n          <span className=\"text-xs text-gray-400\">\r\n            {isDeafened ? 'Undeafen' : 'Deafen'}\r\n          </span>\r\n          <span className=\"text-xs text-gray-400\">\r\n            Leave\r\n          </span>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Hidden audio element for self */}\r\n      <audio ref={userAudio} autoPlay muted />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CallRoom;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}