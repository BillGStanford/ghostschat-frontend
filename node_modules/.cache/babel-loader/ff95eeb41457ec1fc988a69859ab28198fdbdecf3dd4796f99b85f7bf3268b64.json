{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\natol\\\\OneDrive\\\\Desktop\\\\ghostschat\\\\ghostschat-frontend\\\\src\\\\components\\\\CallRoom.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef, useCallback } from 'react';\nimport { Mic, MicOff, Users } from 'lucide-react';\nimport Peer from 'simple-peer';\nimport { THEMES } from '../constants';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CallRoom = ({\n  socket,\n  roomId,\n  username,\n  users,\n  callState\n}) => {\n  _s();\n  const [peers, setPeers] = useState([]);\n  const [isMuted, setIsMuted] = useState(false);\n  const userAudio = useRef(null);\n  const peersRef = useRef([]);\n  const streamRef = useRef(null);\n  const currentTheme = THEMES.default;\n\n  // Cleanup a specific peer\n  const cleanupPeer = useCallback(peerID => {\n    const peerObj = peersRef.current.find(p => p.peerID === peerID);\n    if (peerObj) {\n      peerObj.peer.destroy();\n      peersRef.current = peersRef.current.filter(p => p.peerID !== peerID);\n      setPeers(prev => prev.filter(p => p.peerID !== peerID));\n    }\n  }, []);\n\n  // Full cleanup\n  const cleanup = useCallback(() => {\n    if (streamRef.current) {\n      streamRef.current.getTracks().forEach(track => track.stop());\n      streamRef.current = null;\n    }\n    peersRef.current.forEach(({\n      peer\n    }) => {\n      peer.destroy();\n    });\n    peersRef.current = [];\n    setPeers([]);\n    if (userAudio.current) {\n      userAudio.current.srcObject = null;\n    }\n  }, []);\n  const createPeer = useCallback((userToSignal, callerID, stream) => {\n    const existingPeer = peersRef.current.find(p => p.peerID === userToSignal);\n    if (existingPeer) return existingPeer.peer;\n    const peer = new Peer({\n      initiator: true,\n      trickle: false,\n      stream,\n      config: {\n        iceServers: [{\n          urls: 'stun:stun.l.google.com:19302'\n        }, {\n          urls: 'stun:stun1.l.google.com:19302'\n        }]\n      }\n    });\n    peer.on('signal', signal => {\n      socket.emit('callSignal', {\n        roomId,\n        signal,\n        to: userToSignal\n      });\n    });\n    peer.on('error', err => {\n      console.error('Peer error:', err);\n      cleanupPeer(userToSignal);\n    });\n    peer.on('close', () => {\n      cleanupPeer(userToSignal);\n    });\n    return peer;\n  }, [socket, roomId, cleanupPeer]);\n  const addPeer = useCallback((incomingSignal, callerID, stream) => {\n    const existingPeer = peersRef.current.find(p => p.peerID === callerID);\n    if (existingPeer) return existingPeer.peer;\n    const peer = new Peer({\n      initiator: false,\n      trickle: false,\n      stream,\n      config: {\n        iceServers: [{\n          urls: 'stun:stun.l.google.com:19302'\n        }, {\n          urls: 'stun:stun1.l.google.com:19302'\n        }]\n      }\n    });\n    peer.on('signal', signal => {\n      socket.emit('callSignal', {\n        roomId,\n        signal,\n        to: callerID\n      });\n    });\n    peer.on('error', err => {\n      console.error('Peer error:', err);\n      cleanupPeer(callerID);\n    });\n    peer.on('close', () => {\n      cleanupPeer(callerID);\n    });\n    try {\n      peer.signal(incomingSignal);\n    } catch (err) {\n      console.error('Error signaling peer:', err);\n      cleanupPeer(callerID);\n    }\n    return peer;\n  }, [socket, roomId, cleanupPeer]);\n\n  // Get all participants including those without active peer connections\n  const getAllParticipants = useCallback(() => {\n    // Start with the current user\n    const allParticipants = [{\n      peerID: socket.id,\n      username: username,\n      isSelf: true\n    }];\n\n    // Add peers with active connections\n    peersRef.current.forEach(({\n      peerID,\n      username\n    }) => {\n      if (peerID !== socket.id) {\n        allParticipants.push({\n          peerID,\n          username,\n          isSelf: false\n        });\n      }\n    });\n\n    // Add any participants from callState that might not have active connections yet\n    callState.participants.forEach(participantId => {\n      if (participantId !== socket.id && !allParticipants.some(p => p.peerID === participantId)) {\n        var _users$find;\n        const participantUsername = ((_users$find = users.find(u => u.id === participantId)) === null || _users$find === void 0 ? void 0 : _users$find.username) || 'Unknown';\n        allParticipants.push({\n          peerID: participantId,\n          username: participantUsername,\n          isSelf: false,\n          isConnecting: true\n        });\n      }\n    });\n    return allParticipants;\n  }, [socket.id, username, callState.participants, users]);\n  useEffect(() => {\n    const initCall = async () => {\n      try {\n        const stream = await navigator.mediaDevices.getUserMedia({\n          audio: true\n        });\n        streamRef.current = stream;\n        if (userAudio.current) {\n          userAudio.current.srcObject = stream;\n        }\n\n        // Create peer connections for existing participants (excluding self)\n        callState.participants.filter(participantId => participantId !== socket.id).forEach(participantId => {\n          var _users$find2;\n          const peer = createPeer(participantId, socket.id, stream);\n          peersRef.current.push({\n            peerID: participantId,\n            peer,\n            username: ((_users$find2 = users.find(u => u.id === participantId)) === null || _users$find2 === void 0 ? void 0 : _users$find2.username) || 'Unknown'\n          });\n        });\n\n        // Initial update of all participants\n        setPeers(getAllParticipants());\n      } catch (err) {\n        console.error('Error accessing media devices:', err);\n      }\n    };\n    const handleCallSignal = ({\n      signal,\n      from\n    }) => {\n      if (!streamRef.current) return;\n      const peerObj = peersRef.current.find(p => p.peerID === from);\n      if (peerObj) {\n        try {\n          peerObj.peer.signal(signal);\n        } catch (err) {\n          console.error('Error signaling existing peer:', err);\n          cleanupPeer(from);\n        }\n      } else {\n        var _users$find3;\n        const peer = addPeer(signal, from, streamRef.current);\n        peersRef.current.push({\n          peerID: from,\n          peer,\n          username: ((_users$find3 = users.find(u => u.id === from)) === null || _users$find3 === void 0 ? void 0 : _users$find3.username) || 'Unknown'\n        });\n      }\n      setPeers(getAllParticipants());\n    };\n    const handleParticipantJoined = ({\n      userId,\n      username: joinedUsername\n    }) => {\n      if (userId !== socket.id && streamRef.current) {\n        const peer = createPeer(userId, socket.id, streamRef.current);\n        peersRef.current.push({\n          peerID: userId,\n          peer,\n          username: joinedUsername\n        });\n      }\n      setPeers(getAllParticipants());\n    };\n    const handleParticipantLeft = ({\n      userId\n    }) => {\n      cleanupPeer(userId);\n      setPeers(getAllParticipants());\n    };\n    initCall();\n    socket.on('callSignal', handleCallSignal);\n    socket.on('callParticipantJoined', handleParticipantJoined);\n    socket.on('callParticipantLeft', handleParticipantLeft);\n    socket.on('callEnded', cleanup);\n    return () => {\n      cleanup();\n      socket.off('callSignal', handleCallSignal);\n      socket.off('callParticipantJoined', handleParticipantJoined);\n      socket.off('callParticipantLeft', handleParticipantLeft);\n      socket.off('callEnded', cleanup);\n    };\n  }, [socket, roomId, callState, users, createPeer, addPeer, cleanup, cleanupPeer, getAllParticipants]);\n  const toggleMute = () => {\n    if (streamRef.current) {\n      streamRef.current.getAudioTracks().forEach(track => {\n        track.enabled = !track.enabled;\n      });\n      setIsMuted(!isMuted);\n    }\n  };\n\n  // Deduplicate participants before rendering\n  const uniqueParticipants = peers.filter((participant, index, self) => index === self.findIndex(p => p.peerID === participant.peerID));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `flex-1 ${currentTheme.card} p-4 overflow-y-auto scrollbar-thin scrollbar-thumb-ghost-600 scrollbar-track-ghost-800`,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-center justify-between mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: `text-lg font-bold ${currentTheme.textPrimary} gradient-text`,\n        children: \"Voice Call\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: toggleMute,\n        className: `${currentTheme.buttonSecondary} rounded-xl p-2 flex items-center space-x-2 ${currentTheme.hover} transition-all duration-200`,\n        children: [isMuted ? /*#__PURE__*/_jsxDEV(MicOff, {\n          className: \"w-5 h-5\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 22\n        }, this) : /*#__PURE__*/_jsxDEV(Mic, {\n          className: \"w-5 h-5\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 55\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: isMuted ? 'Unmute' : 'Mute'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"space-y-4\",\n      children: uniqueParticipants.map(({\n        peerID,\n        username: participantUsername,\n        isSelf,\n        isConnecting\n      }) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${currentTheme.buttonSecondary} rounded-xl p-3 flex items-center space-x-2`,\n        children: [/*#__PURE__*/_jsxDEV(Users, {\n          className: \"w-5 h-5 text-purple-400\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: `${currentTheme.textPrimary} text-sm`,\n          children: [participantUsername, \" \", isSelf ? '(You)' : '', isConnecting && !isSelf && ' (Connecting...)']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 13\n        }, this), isSelf && /*#__PURE__*/_jsxDEV(\"audio\", {\n          ref: userAudio,\n          autoPlay: true,\n          muted: isMuted\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 24\n        }, this)]\n      }, `${peerID}-${participantUsername}`, true, {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 249,\n    columnNumber: 5\n  }, this);\n};\n_s(CallRoom, \"V5T3o9EXQpfz0WECGwADwzAR4yc=\");\n_c = CallRoom;\nexport default CallRoom;\nvar _c;\n$RefreshReg$(_c, \"CallRoom\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useCallback","Mic","MicOff","Users","Peer","THEMES","jsxDEV","_jsxDEV","CallRoom","socket","roomId","username","users","callState","_s","peers","setPeers","isMuted","setIsMuted","userAudio","peersRef","streamRef","currentTheme","default","cleanupPeer","peerID","peerObj","current","find","p","peer","destroy","filter","prev","cleanup","getTracks","forEach","track","stop","srcObject","createPeer","userToSignal","callerID","stream","existingPeer","initiator","trickle","config","iceServers","urls","on","signal","emit","to","err","console","error","addPeer","incomingSignal","getAllParticipants","allParticipants","id","isSelf","push","participants","participantId","some","_users$find","participantUsername","u","isConnecting","initCall","navigator","mediaDevices","getUserMedia","audio","_users$find2","handleCallSignal","from","_users$find3","handleParticipantJoined","userId","joinedUsername","handleParticipantLeft","off","toggleMute","getAudioTracks","enabled","uniqueParticipants","participant","index","self","findIndex","className","card","children","textPrimary","fileName","_jsxFileName","lineNumber","columnNumber","onClick","buttonSecondary","hover","map","ref","autoPlay","muted","_c","$RefreshReg$"],"sources":["C:/Users/natol/OneDrive/Desktop/ghostschat/ghostschat-frontend/src/components/CallRoom.js"],"sourcesContent":["import React, { useState, useEffect, useRef, useCallback } from 'react';\r\nimport { Mic, MicOff, Users } from 'lucide-react';\r\nimport Peer from 'simple-peer';\r\nimport { THEMES } from '../constants';\r\n\r\nconst CallRoom = ({ socket, roomId, username, users, callState }) => {\r\n  const [peers, setPeers] = useState([]);\r\n  const [isMuted, setIsMuted] = useState(false);\r\n  const userAudio = useRef(null);\r\n  const peersRef = useRef([]);\r\n  const streamRef = useRef(null);\r\n  const currentTheme = THEMES.default;\r\n\r\n  // Cleanup a specific peer\r\n  const cleanupPeer = useCallback((peerID) => {\r\n    const peerObj = peersRef.current.find(p => p.peerID === peerID);\r\n    if (peerObj) {\r\n      peerObj.peer.destroy();\r\n      peersRef.current = peersRef.current.filter(p => p.peerID !== peerID);\r\n      setPeers(prev => prev.filter(p => p.peerID !== peerID));\r\n    }\r\n  }, []);\r\n\r\n  // Full cleanup\r\n  const cleanup = useCallback(() => {\r\n    if (streamRef.current) {\r\n      streamRef.current.getTracks().forEach(track => track.stop());\r\n      streamRef.current = null;\r\n    }\r\n    \r\n    peersRef.current.forEach(({ peer }) => {\r\n      peer.destroy();\r\n    });\r\n    \r\n    peersRef.current = [];\r\n    setPeers([]);\r\n    \r\n    if (userAudio.current) {\r\n      userAudio.current.srcObject = null;\r\n    }\r\n  }, []);\r\n\r\n  const createPeer = useCallback((userToSignal, callerID, stream) => {\r\n    const existingPeer = peersRef.current.find(p => p.peerID === userToSignal);\r\n    if (existingPeer) return existingPeer.peer;\r\n\r\n    const peer = new Peer({\r\n      initiator: true,\r\n      trickle: false,\r\n      stream,\r\n      config: {\r\n        iceServers: [\r\n          { urls: 'stun:stun.l.google.com:19302' },\r\n          { urls: 'stun:stun1.l.google.com:19302' }\r\n        ]\r\n      }\r\n    });\r\n\r\n    peer.on('signal', signal => {\r\n      socket.emit('callSignal', { roomId, signal, to: userToSignal });\r\n    });\r\n\r\n    peer.on('error', err => {\r\n      console.error('Peer error:', err);\r\n      cleanupPeer(userToSignal);\r\n    });\r\n\r\n    peer.on('close', () => {\r\n      cleanupPeer(userToSignal);\r\n    });\r\n\r\n    return peer;\r\n  }, [socket, roomId, cleanupPeer]);\r\n\r\n  const addPeer = useCallback((incomingSignal, callerID, stream) => {\r\n    const existingPeer = peersRef.current.find(p => p.peerID === callerID);\r\n    if (existingPeer) return existingPeer.peer;\r\n\r\n    const peer = new Peer({\r\n      initiator: false,\r\n      trickle: false,\r\n      stream,\r\n      config: {\r\n        iceServers: [\r\n          { urls: 'stun:stun.l.google.com:19302' },\r\n          { urls: 'stun:stun1.l.google.com:19302' }\r\n        ]\r\n      }\r\n    });\r\n\r\n    peer.on('signal', signal => {\r\n      socket.emit('callSignal', { roomId, signal, to: callerID });\r\n    });\r\n\r\n    peer.on('error', err => {\r\n      console.error('Peer error:', err);\r\n      cleanupPeer(callerID);\r\n    });\r\n\r\n    peer.on('close', () => {\r\n      cleanupPeer(callerID);\r\n    });\r\n\r\n    try {\r\n      peer.signal(incomingSignal);\r\n    } catch (err) {\r\n      console.error('Error signaling peer:', err);\r\n      cleanupPeer(callerID);\r\n    }\r\n    \r\n    return peer;\r\n  }, [socket, roomId, cleanupPeer]);\r\n\r\n  // Get all participants including those without active peer connections\r\n  const getAllParticipants = useCallback(() => {\r\n    // Start with the current user\r\n    const allParticipants = [{ \r\n      peerID: socket.id, \r\n      username: username,\r\n      isSelf: true\r\n    }];\r\n\r\n    // Add peers with active connections\r\n    peersRef.current.forEach(({ peerID, username }) => {\r\n      if (peerID !== socket.id) {\r\n        allParticipants.push({ \r\n          peerID, \r\n          username,\r\n          isSelf: false\r\n        });\r\n      }\r\n    });\r\n\r\n    // Add any participants from callState that might not have active connections yet\r\n    callState.participants.forEach(participantId => {\r\n      if (participantId !== socket.id && \r\n          !allParticipants.some(p => p.peerID === participantId)) {\r\n        const participantUsername = users.find(u => u.id === participantId)?.username || 'Unknown';\r\n        allParticipants.push({\r\n          peerID: participantId,\r\n          username: participantUsername,\r\n          isSelf: false,\r\n          isConnecting: true\r\n        });\r\n      }\r\n    });\r\n\r\n    return allParticipants;\r\n  }, [socket.id, username, callState.participants, users]);\r\n\r\n  useEffect(() => {\r\n    const initCall = async () => {\r\n      try {\r\n        const stream = await navigator.mediaDevices.getUserMedia({ audio: true });\r\n        streamRef.current = stream;\r\n        if (userAudio.current) {\r\n          userAudio.current.srcObject = stream;\r\n        }\r\n\r\n        // Create peer connections for existing participants (excluding self)\r\n        callState.participants\r\n          .filter(participantId => participantId !== socket.id)\r\n          .forEach(participantId => {\r\n            const peer = createPeer(participantId, socket.id, stream);\r\n            peersRef.current.push({\r\n              peerID: participantId,\r\n              peer,\r\n              username: users.find(u => u.id === participantId)?.username || 'Unknown',\r\n            });\r\n          });\r\n\r\n        // Initial update of all participants\r\n        setPeers(getAllParticipants());\r\n      } catch (err) {\r\n        console.error('Error accessing media devices:', err);\r\n      }\r\n    };\r\n\r\n    const handleCallSignal = ({ signal, from }) => {\r\n      if (!streamRef.current) return;\r\n      \r\n      const peerObj = peersRef.current.find(p => p.peerID === from);\r\n      if (peerObj) {\r\n        try {\r\n          peerObj.peer.signal(signal);\r\n        } catch (err) {\r\n          console.error('Error signaling existing peer:', err);\r\n          cleanupPeer(from);\r\n        }\r\n      } else {\r\n        const peer = addPeer(signal, from, streamRef.current);\r\n        peersRef.current.push({\r\n          peerID: from,\r\n          peer,\r\n          username: users.find(u => u.id === from)?.username || 'Unknown',\r\n        });\r\n      }\r\n      setPeers(getAllParticipants());\r\n    };\r\n\r\n    const handleParticipantJoined = ({ userId, username: joinedUsername }) => {\r\n      if (userId !== socket.id && streamRef.current) {\r\n        const peer = createPeer(userId, socket.id, streamRef.current);\r\n        peersRef.current.push({\r\n          peerID: userId,\r\n          peer,\r\n          username: joinedUsername,\r\n        });\r\n      }\r\n      setPeers(getAllParticipants());\r\n    };\r\n\r\n    const handleParticipantLeft = ({ userId }) => {\r\n      cleanupPeer(userId);\r\n      setPeers(getAllParticipants());\r\n    };\r\n\r\n    initCall();\r\n\r\n    socket.on('callSignal', handleCallSignal);\r\n    socket.on('callParticipantJoined', handleParticipantJoined);\r\n    socket.on('callParticipantLeft', handleParticipantLeft);\r\n    socket.on('callEnded', cleanup);\r\n\r\n    return () => {\r\n      cleanup();\r\n      socket.off('callSignal', handleCallSignal);\r\n      socket.off('callParticipantJoined', handleParticipantJoined);\r\n      socket.off('callParticipantLeft', handleParticipantLeft);\r\n      socket.off('callEnded', cleanup);\r\n    };\r\n  }, [socket, roomId, callState, users, createPeer, addPeer, cleanup, cleanupPeer, getAllParticipants]);\r\n\r\n  const toggleMute = () => {\r\n    if (streamRef.current) {\r\n      streamRef.current.getAudioTracks().forEach(track => {\r\n        track.enabled = !track.enabled;\r\n      });\r\n      setIsMuted(!isMuted);\r\n    }\r\n  };\r\n\r\n  // Deduplicate participants before rendering\r\n  const uniqueParticipants = peers.filter((participant, index, self) => \r\n    index === self.findIndex(p => p.peerID === participant.peerID)\r\n  );\r\n\r\n  return (\r\n    <div className={`flex-1 ${currentTheme.card} p-4 overflow-y-auto scrollbar-thin scrollbar-thumb-ghost-600 scrollbar-track-ghost-800`}>\r\n      <div className=\"flex items-center justify-between mb-4\">\r\n        <h2 className={`text-lg font-bold ${currentTheme.textPrimary} gradient-text`}>Voice Call</h2>\r\n        <button\r\n          onClick={toggleMute}\r\n          className={`${currentTheme.buttonSecondary} rounded-xl p-2 flex items-center space-x-2 ${currentTheme.hover} transition-all duration-200`}\r\n        >\r\n          {isMuted ? <MicOff className=\"w-5 h-5\" /> : <Mic className=\"w-5 h-5\" />}\r\n          <span>{isMuted ? 'Unmute' : 'Mute'}</span>\r\n        </button>\r\n      </div>\r\n\r\n      <div className=\"space-y-4\">\r\n        {uniqueParticipants.map(({ peerID, username: participantUsername, isSelf, isConnecting }) => (\r\n          <div \r\n            key={`${peerID}-${participantUsername}`} \r\n            className={`${currentTheme.buttonSecondary} rounded-xl p-3 flex items-center space-x-2`}\r\n          >\r\n            <Users className=\"w-5 h-5 text-purple-400\" />\r\n            <span className={`${currentTheme.textPrimary} text-sm`}>\r\n              {participantUsername} {isSelf ? '(You)' : ''}\r\n              {isConnecting && !isSelf && ' (Connecting...)'}\r\n            </span>\r\n            {isSelf && <audio ref={userAudio} autoPlay muted={isMuted} />}\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CallRoom;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}