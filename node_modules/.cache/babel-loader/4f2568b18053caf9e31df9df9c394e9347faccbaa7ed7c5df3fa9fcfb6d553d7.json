{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\natol\\\\OneDrive\\\\Desktop\\\\ghostschat\\\\ghostschat-frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// src/App.js\nimport React, { useState, useEffect } from 'react';\nimport { io } from 'socket.io-client';\nimport { v4 as uuidv4 } from 'uuid';\nimport Home from './pages/Home';\nimport Join from './pages/Join';\nimport Chat from './pages/Chat';\nimport { ENCRYPTION_KEY, THEMES } from './constants';\nimport CryptoJS from 'crypto-js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [socket, setSocket] = useState(null);\n  const [currentView, setCurrentView] = useState('home');\n  const [username, setUsername] = useState('');\n  const [roomId, setRoomId] = useState('');\n  const [roomName, setRoomName] = useState('');\n  const [messages, setMessages] = useState([]);\n  const [users, setUsers] = useState([]);\n  const [isAdmin, setIsAdmin] = useState(false);\n  const [isSeniorMod, setIsSeniorMod] = useState(false);\n  const [isModerator, setIsModerator] = useState(false);\n  const [roomExists, setRoomExists] = useState(true);\n  const [roomSettings, setRoomSettings] = useState({\n    cooldown: 0,\n    joinCooldown: 10,\n    allowImages: true,\n    allowLinks: true,\n    theme: 'default'\n  });\n  const [bannedUsers, setBannedUsers] = useState([]);\n  const [userJoinTime, setUserJoinTime] = useState(null);\n  const [callState, setCallState] = useState(null);\n  useEffect(() => {\n    const urlParams = new URLSearchParams(window.location.search);\n    const roomParam = urlParams.get('room');\n    if (roomParam) {\n      setRoomId(roomParam);\n      setCurrentView('join');\n    }\n  }, []);\n  useEffect(() => {\n    document.title = roomName ? `${roomName} | GhostsChat` : 'GhostsChat - Anonymous Chat App';\n  }, [roomName]);\n  useEffect(() => {\n    const serverUrl = process.env.REACT_APP_SERVER_URL || 'http://localhost:3001';\n    const newSocket = io(serverUrl, {\n      withCredentials: true\n    });\n    setSocket(newSocket);\n    newSocket.on('message', encryptedData => {\n      const decryptedMessage = decrypt(encryptedData);\n      if (decryptedMessage) {\n        setMessages(prev => [...prev, decryptedMessage]);\n      }\n    });\n    newSocket.on('messageDeleted', messageId => {\n      setMessages(prev => prev.filter(msg => msg.id !== messageId));\n    });\n    newSocket.on('userJoined', data => {\n      setUsers(data.users);\n      setMessages(prev => [...prev, {\n        id: Date.now(),\n        type: 'system',\n        content: `${data.username} materialized in the shadows...`,\n        timestamp: new Date().toISOString()\n      }]);\n    });\n    newSocket.on('userLeft', data => {\n      setUsers(data.users);\n      setMessages(prev => [...prev, {\n        id: Date.now(),\n        type: 'system',\n        content: `${data.username} vanished into the void...`,\n        timestamp: new Date().toISOString()\n      }]);\n    });\n    newSocket.on('userKicked', data => {\n      setUsers(data.users);\n      setMessages(prev => [...prev, {\n        id: Date.now(),\n        type: 'system',\n        content: `${data.username} has been banished by ${data.kickedBy}...`,\n        timestamp: new Date().toISOString()\n      }]);\n    });\n    newSocket.on('youWereKicked', () => {\n      setMessages(prev => [...prev, {\n        id: Date.now(),\n        type: 'system',\n        content: 'You have been banished from this realm...',\n        timestamp: new Date().toISOString()\n      }]);\n      setTimeout(() => resetState(), 2000);\n    });\n    newSocket.on('roomDeleted', () => {\n      setRoomExists(false);\n      setMessages(prev => [...prev, {\n        id: Date.now(),\n        type: 'system',\n        content: 'The realm has been consumed by darkness...',\n        timestamp: new Date().toISOString()\n      }]);\n      setTimeout(() => resetState(), 2000);\n    });\n    newSocket.on('adminTransferred', data => {\n      setIsAdmin(data.newAdmin === newSocket.id);\n      setIsSeniorMod(false);\n      setMessages(prev => [...prev, {\n        id: Date.now(),\n        type: 'system',\n        content: `${data.username} has been crowned as the new shadow lord...`,\n        timestamp: new Date().toISOString()\n      }]);\n    });\n    newSocket.on('moderatorAdded', data => {\n      if (data.userId === newSocket.id) {\n        setIsModerator(!data.senior);\n        setIsSeniorMod(data.senior);\n      }\n      setMessages(prev => [...prev, {\n        id: Date.now(),\n        type: 'system',\n        content: `${data.username} has been ${data.senior ? 'promoted to Senior Moderator' : 'made a Moderator'}...`,\n        timestamp: new Date().toISOString()\n      }]);\n    });\n    newSocket.on('moderatorRemoved', data => {\n      if (data.userId === newSocket.id) {\n        setIsModerator(false);\n        setIsSeniorMod(false);\n      }\n      setMessages(prev => [...prev, {\n        id: Date.now(),\n        type: 'system',\n        content: `${data.username} has been ${data.senior ? 'demoted from Senior Moderator' : 'removed as Moderator'}...`,\n        timestamp: new Date().toISOString()\n      }]);\n    });\n    newSocket.on('userBanned', data => {\n      setBannedUsers(prev => [...prev, data.username.toLowerCase()]);\n      setUsers(data.users);\n      setMessages(prev => [...prev, {\n        id: Date.now(),\n        type: 'system',\n        content: `${data.username} has been eternally banished by ${data.bannedBy}...`,\n        timestamp: new Date().toISOString()\n      }]);\n    });\n    newSocket.on('youWereBanned', () => {\n      setMessages(prev => [...prev, {\n        id: Date.now(),\n        type: 'system',\n        content: 'You have been eternally banished from this realm...',\n        timestamp: new Date().toISOString()\n      }]);\n      setTimeout(() => resetState(), 2000);\n    });\n    newSocket.on('roomSettingsUpdated', settings => {\n      setRoomSettings(settings);\n      setMessages(prev => [...prev, {\n        id: Date.now(),\n        type: 'system',\n        content: 'Realm settings have been updated...',\n        timestamp: new Date().toISOString()\n      }]);\n    });\n    newSocket.on('roomNotFound', () => {\n      setRoomExists(false);\n      setMessages(prev => [...prev, {\n        id: Date.now(),\n        type: 'system',\n        content: 'This realm does not exist...',\n        timestamp: new Date().toISOString()\n      }]);\n    });\n    newSocket.on('callStarted', data => {\n      setCallState({\n        hostId: data.hostId,\n        participants: [data.hostId]\n      });\n      setMessages(prev => [...prev, {\n        id: Date.now(),\n        type: 'system',\n        content: 'A call has started in the realm...',\n        timestamp: new Date().toISOString()\n      }]);\n    });\n    newSocket.on('callEnded', () => {\n      setCallState(null);\n      setMessages(prev => [...prev, {\n        id: Date.now(),\n        type: 'system',\n        content: 'The call has ended...',\n        timestamp: new Date().toISOString()\n      }]);\n    });\n    newSocket.on('callParticipantJoined', data => {\n      setCallState(prev => prev ? {\n        ...prev,\n        participants: [...prev.participants, data.userId]\n      } : null);\n      setMessages(prev => [...prev, {\n        id: Date.now(),\n        type: 'system',\n        content: `${data.username} joined the call...`,\n        timestamp: new Date().toISOString()\n      }]);\n    });\n    newSocket.on('callParticipantLeft', data => {\n      setCallState(prev => prev ? {\n        ...prev,\n        participants: prev.participants.filter(id => id !== data.userId)\n      } : null);\n      setMessages(prev => [...prev, {\n        id: Date.now(),\n        type: 'system',\n        content: `${data.username} left the call...`,\n        timestamp: new Date().toISOString()\n      }]);\n    });\n    newSocket.on('callHostChanged', data => {\n      setCallState(prev => prev ? {\n        ...prev,\n        hostId: data.newHostId\n      } : null);\n      setMessages(prev => [...prev, {\n        id: Date.now(),\n        type: 'system',\n        content: 'The call host has changed...',\n        timestamp: new Date().toISOString()\n      }]);\n    });\n    newSocket.on('callActive', data => {\n      setCallState(data);\n    });\n    newSocket.on('callSignal', data => {\n      // Handled in CallRoom component\n    });\n    return () => newSocket.close();\n  }, []);\n  const resetState = () => {\n    setCurrentView('home');\n    setRoomId('');\n    setRoomName('');\n    setMessages([]);\n    setUsers([]);\n    setIsAdmin(false);\n    setIsSeniorMod(false);\n    setIsModerator(false);\n    setCallState(null);\n    setBannedUsers([]);\n    setRoomExists(true);\n  };\n  const encrypt = text => {\n    return CryptoJS.AES.encrypt(JSON.stringify(text), ENCRYPTION_KEY).toString();\n  };\n  const decrypt = encryptedText => {\n    try {\n      const bytes = CryptoJS.AES.decrypt(encryptedText, ENCRYPTION_KEY);\n      return JSON.parse(bytes.toString(CryptoJS.enc.Utf8));\n    } catch (error) {\n      console.error('Decryption failed:', error);\n      return null;\n    }\n  };\n  const createRoom = () => {\n    if (!username.trim() || !roomName.trim()) return;\n    const newRoomId = uuidv4().substring(0, 8);\n    setRoomId(newRoomId);\n    setIsAdmin(true);\n    socket.emit('createRoom', {\n      roomId: newRoomId,\n      username: username.trim(),\n      roomName: roomName.trim(),\n      settings: roomSettings\n    });\n    setCurrentView('chat');\n  };\n  const joinRoom = () => {\n    if (!username.trim() || !roomId.trim()) return;\n    socket.emit('joinRoom', {\n      roomId: roomId.trim(),\n      username: username.trim(),\n      bannedUsers\n    });\n    setCurrentView('chat');\n    setUserJoinTime(Date.now());\n  };\n  if (currentView === 'home') {\n    return /*#__PURE__*/_jsxDEV(Home, {\n      username: username,\n      setUsername: setUsername,\n      roomName: roomName,\n      setRoomName: setRoomName,\n      roomId: roomId,\n      setRoomId: setRoomId,\n      createRoom: createRoom,\n      setCurrentView: setCurrentView\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 308,\n      columnNumber: 7\n    }, this);\n  }\n  if (currentView === 'join') {\n    return /*#__PURE__*/_jsxDEV(Join, {\n      username: username,\n      setUsername: setUsername,\n      roomId: roomId,\n      roomExists: roomExists,\n      joinRoom: joinRoom,\n      setCurrentView: setCurrentView\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 323,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Chat, {\n    socket: socket,\n    username: username,\n    roomId: roomId,\n    roomName: roomName,\n    messages: messages,\n    setMessages: setMessages,\n    users: users,\n    setUsers: setUsers,\n    isAdmin: isAdmin,\n    setIsAdmin: setIsAdmin,\n    isSeniorMod: isSeniorMod,\n    setIsSeniorMod: setIsSeniorMod,\n    isModerator: isModerator,\n    setIsModerator: setIsModerator,\n    roomSettings: roomSettings,\n    setRoomSettings: setRoomSettings,\n    bannedUsers: bannedUsers,\n    setBannedUsers: setBannedUsers,\n    userJoinTime: userJoinTime,\n    setCurrentView: setCurrentView,\n    callState: callState,\n    setCallState: setCallState,\n    encrypt: encrypt,\n    resetState: resetState\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 335,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"0wX3H3pAjROphnw4tGoKJY9feuw=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","io","v4","uuidv4","Home","Join","Chat","ENCRYPTION_KEY","THEMES","CryptoJS","jsxDEV","_jsxDEV","App","_s","socket","setSocket","currentView","setCurrentView","username","setUsername","roomId","setRoomId","roomName","setRoomName","messages","setMessages","users","setUsers","isAdmin","setIsAdmin","isSeniorMod","setIsSeniorMod","isModerator","setIsModerator","roomExists","setRoomExists","roomSettings","setRoomSettings","cooldown","joinCooldown","allowImages","allowLinks","theme","bannedUsers","setBannedUsers","userJoinTime","setUserJoinTime","callState","setCallState","urlParams","URLSearchParams","window","location","search","roomParam","get","document","title","serverUrl","process","env","REACT_APP_SERVER_URL","newSocket","withCredentials","on","encryptedData","decryptedMessage","decrypt","prev","messageId","filter","msg","id","data","Date","now","type","content","timestamp","toISOString","kickedBy","setTimeout","resetState","newAdmin","userId","senior","toLowerCase","bannedBy","settings","hostId","participants","newHostId","close","encrypt","text","AES","JSON","stringify","toString","encryptedText","bytes","parse","enc","Utf8","error","console","createRoom","trim","newRoomId","substring","emit","joinRoom","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/natol/OneDrive/Desktop/ghostschat/ghostschat-frontend/src/App.js"],"sourcesContent":["// src/App.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport { io } from 'socket.io-client';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport Home from './pages/Home';\r\nimport Join from './pages/Join';\r\nimport Chat from './pages/Chat';\r\nimport { ENCRYPTION_KEY, THEMES } from './constants';\r\nimport CryptoJS from 'crypto-js';\r\n\r\nfunction App() {\r\n  const [socket, setSocket] = useState(null);\r\n  const [currentView, setCurrentView] = useState('home');\r\n  const [username, setUsername] = useState('');\r\n  const [roomId, setRoomId] = useState('');\r\n  const [roomName, setRoomName] = useState('');\r\n  const [messages, setMessages] = useState([]);\r\n  const [users, setUsers] = useState([]);\r\n  const [isAdmin, setIsAdmin] = useState(false);\r\n  const [isSeniorMod, setIsSeniorMod] = useState(false);\r\n  const [isModerator, setIsModerator] = useState(false);\r\n  const [roomExists, setRoomExists] = useState(true);\r\n  const [roomSettings, setRoomSettings] = useState({\r\n    cooldown: 0,\r\n    joinCooldown: 10,\r\n    allowImages: true,\r\n    allowLinks: true,\r\n    theme: 'default'\r\n  });\r\n  const [bannedUsers, setBannedUsers] = useState([]);\r\n  const [userJoinTime, setUserJoinTime] = useState(null);\r\n  const [callState, setCallState] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const urlParams = new URLSearchParams(window.location.search);\r\n    const roomParam = urlParams.get('room');\r\n    if (roomParam) {\r\n      setRoomId(roomParam);\r\n      setCurrentView('join');\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    document.title = roomName ? `${roomName} | GhostsChat` : 'GhostsChat - Anonymous Chat App';\r\n  }, [roomName]);\r\n\r\n  useEffect(() => {\r\n    const serverUrl = process.env.REACT_APP_SERVER_URL || 'http://localhost:3001';\r\n    const newSocket = io(serverUrl, { withCredentials: true });\r\n    setSocket(newSocket);\r\n\r\n    newSocket.on('message', (encryptedData) => {\r\n      const decryptedMessage = decrypt(encryptedData);\r\n      if (decryptedMessage) {\r\n        setMessages(prev => [...prev, decryptedMessage]);\r\n      }\r\n    });\r\n\r\n    newSocket.on('messageDeleted', (messageId) => {\r\n      setMessages(prev => prev.filter(msg => msg.id !== messageId));\r\n    });\r\n\r\n    newSocket.on('userJoined', (data) => {\r\n      setUsers(data.users);\r\n      setMessages(prev => [...prev, {\r\n        id: Date.now(),\r\n        type: 'system',\r\n        content: `${data.username} materialized in the shadows...`,\r\n        timestamp: new Date().toISOString()\r\n      }]);\r\n    });\r\n\r\n    newSocket.on('userLeft', (data) => {\r\n      setUsers(data.users);\r\n      setMessages(prev => [...prev, {\r\n        id: Date.now(),\r\n        type: 'system',\r\n        content: `${data.username} vanished into the void...`,\r\n        timestamp: new Date().toISOString()\r\n      }]);\r\n    });\r\n\r\n    newSocket.on('userKicked', (data) => {\r\n      setUsers(data.users);\r\n      setMessages(prev => [...prev, {\r\n        id: Date.now(),\r\n        type: 'system',\r\n        content: `${data.username} has been banished by ${data.kickedBy}...`,\r\n        timestamp: new Date().toISOString()\r\n      }]);\r\n    });\r\n\r\n    newSocket.on('youWereKicked', () => {\r\n      setMessages(prev => [...prev, {\r\n        id: Date.now(),\r\n        type: 'system',\r\n        content: 'You have been banished from this realm...',\r\n        timestamp: new Date().toISOString()\r\n      }]);\r\n      setTimeout(() => resetState(), 2000);\r\n    });\r\n\r\n    newSocket.on('roomDeleted', () => {\r\n      setRoomExists(false);\r\n      setMessages(prev => [...prev, {\r\n        id: Date.now(),\r\n        type: 'system',\r\n        content: 'The realm has been consumed by darkness...',\r\n        timestamp: new Date().toISOString()\r\n      }]);\r\n      setTimeout(() => resetState(), 2000);\r\n    });\r\n\r\n    newSocket.on('adminTransferred', (data) => {\r\n      setIsAdmin(data.newAdmin === newSocket.id);\r\n      setIsSeniorMod(false);\r\n      setMessages(prev => [...prev, {\r\n        id: Date.now(),\r\n        type: 'system',\r\n        content: `${data.username} has been crowned as the new shadow lord...`,\r\n        timestamp: new Date().toISOString()\r\n      }]);\r\n    });\r\n\r\n    newSocket.on('moderatorAdded', (data) => {\r\n      if (data.userId === newSocket.id) {\r\n        setIsModerator(!data.senior);\r\n        setIsSeniorMod(data.senior);\r\n      }\r\n      setMessages(prev => [...prev, {\r\n        id: Date.now(),\r\n        type: 'system',\r\n        content: `${data.username} has been ${data.senior ? 'promoted to Senior Moderator' : 'made a Moderator'}...`,\r\n        timestamp: new Date().toISOString()\r\n      }]);\r\n    });\r\n\r\n    newSocket.on('moderatorRemoved', (data) => {\r\n      if (data.userId === newSocket.id) {\r\n        setIsModerator(false);\r\n        setIsSeniorMod(false);\r\n      }\r\n      setMessages(prev => [...prev, {\r\n        id: Date.now(),\r\n        type: 'system',\r\n        content: `${data.username} has been ${data.senior ? 'demoted from Senior Moderator' : 'removed as Moderator'}...`,\r\n        timestamp: new Date().toISOString()\r\n      }]);\r\n    });\r\n\r\n    newSocket.on('userBanned', (data) => {\r\n      setBannedUsers(prev => [...prev, data.username.toLowerCase()]);\r\n      setUsers(data.users);\r\n      setMessages(prev => [...prev, {\r\n        id: Date.now(),\r\n        type: 'system',\r\n        content: `${data.username} has been eternally banished by ${data.bannedBy}...`,\r\n        timestamp: new Date().toISOString()\r\n      }]);\r\n    });\r\n\r\n    newSocket.on('youWereBanned', () => {\r\n      setMessages(prev => [...prev, {\r\n        id: Date.now(),\r\n        type: 'system',\r\n        content: 'You have been eternally banished from this realm...',\r\n        timestamp: new Date().toISOString()\r\n      }]);\r\n      setTimeout(() => resetState(), 2000);\r\n    });\r\n\r\n    newSocket.on('roomSettingsUpdated', (settings) => {\r\n      setRoomSettings(settings);\r\n      setMessages(prev => [...prev, {\r\n        id: Date.now(),\r\n        type: 'system',\r\n        content: 'Realm settings have been updated...',\r\n        timestamp: new Date().toISOString()\r\n      }]);\r\n    });\r\n\r\n    newSocket.on('roomNotFound', () => {\r\n      setRoomExists(false);\r\n      setMessages(prev => [...prev, {\r\n        id: Date.now(),\r\n        type: 'system',\r\n        content: 'This realm does not exist...',\r\n        timestamp: new Date().toISOString()\r\n      }]);\r\n    });\r\n\r\n    newSocket.on('callStarted', (data) => {\r\n      setCallState({ hostId: data.hostId, participants: [data.hostId] });\r\n      setMessages(prev => [...prev, {\r\n        id: Date.now(),\r\n        type: 'system',\r\n        content: 'A call has started in the realm...',\r\n        timestamp: new Date().toISOString()\r\n      }]);\r\n    });\r\n\r\n    newSocket.on('callEnded', () => {\r\n      setCallState(null);\r\n      setMessages(prev => [...prev, {\r\n        id: Date.now(),\r\n        type: 'system',\r\n        content: 'The call has ended...',\r\n        timestamp: new Date().toISOString()\r\n      }]);\r\n    });\r\n\r\n    newSocket.on('callParticipantJoined', (data) => {\r\n      setCallState(prev => prev ? { ...prev, participants: [...prev.participants, data.userId] } : null);\r\n      setMessages(prev => [...prev, {\r\n        id: Date.now(),\r\n        type: 'system',\r\n        content: `${data.username} joined the call...`,\r\n        timestamp: new Date().toISOString()\r\n      }]);\r\n    });\r\n\r\n    newSocket.on('callParticipantLeft', (data) => {\r\n      setCallState(prev => prev ? { ...prev, participants: prev.participants.filter(id => id !== data.userId) } : null);\r\n      setMessages(prev => [...prev, {\r\n        id: Date.now(),\r\n        type: 'system',\r\n        content: `${data.username} left the call...`,\r\n        timestamp: new Date().toISOString()\r\n      }]);\r\n    });\r\n\r\n    newSocket.on('callHostChanged', (data) => {\r\n      setCallState(prev => prev ? { ...prev, hostId: data.newHostId } : null);\r\n      setMessages(prev => [...prev, {\r\n        id: Date.now(),\r\n        type: 'system',\r\n        content: 'The call host has changed...',\r\n        timestamp: new Date().toISOString()\r\n      }]);\r\n    });\r\n\r\n    newSocket.on('callActive', (data) => {\r\n      setCallState(data);\r\n    });\r\n\r\n    newSocket.on('callSignal', (data) => {\r\n      // Handled in CallRoom component\r\n    });\r\n\r\n    return () => newSocket.close();\r\n  }, []);\r\n\r\n  const resetState = () => {\r\n    setCurrentView('home');\r\n    setRoomId('');\r\n    setRoomName('');\r\n    setMessages([]);\r\n    setUsers([]);\r\n    setIsAdmin(false);\r\n    setIsSeniorMod(false);\r\n    setIsModerator(false);\r\n    setCallState(null);\r\n    setBannedUsers([]);\r\n    setRoomExists(true);\r\n  };\r\n\r\n  const encrypt = (text) => {\r\n    return CryptoJS.AES.encrypt(JSON.stringify(text), ENCRYPTION_KEY).toString();\r\n  };\r\n\r\n  const decrypt = (encryptedText) => {\r\n    try {\r\n      const bytes = CryptoJS.AES.decrypt(encryptedText, ENCRYPTION_KEY);\r\n      return JSON.parse(bytes.toString(CryptoJS.enc.Utf8));\r\n    } catch (error) {\r\n      console.error('Decryption failed:', error);\r\n      return null;\r\n    }\r\n  };\r\n\r\n  const createRoom = () => {\r\n    if (!username.trim() || !roomName.trim()) return;\r\n    const newRoomId = uuidv4().substring(0, 8);\r\n    setRoomId(newRoomId);\r\n    setIsAdmin(true);\r\n    socket.emit('createRoom', { \r\n      roomId: newRoomId, \r\n      username: username.trim(),\r\n      roomName: roomName.trim(),\r\n      settings: roomSettings\r\n    });\r\n    setCurrentView('chat');\r\n  };\r\n\r\n  const joinRoom = () => {\r\n    if (!username.trim() || !roomId.trim()) return;\r\n    socket.emit('joinRoom', { \r\n      roomId: roomId.trim(), \r\n      username: username.trim(),\r\n      bannedUsers\r\n    });\r\n    setCurrentView('chat');\r\n    setUserJoinTime(Date.now());\r\n  };\r\n\r\n  if (currentView === 'home') {\r\n    return (\r\n      <Home\r\n        username={username}\r\n        setUsername={setUsername}\r\n        roomName={roomName}\r\n        setRoomName={setRoomName}\r\n        roomId={roomId}\r\n        setRoomId={setRoomId}\r\n        createRoom={createRoom}\r\n        setCurrentView={setCurrentView}\r\n      />\r\n    );\r\n  }\r\n\r\n  if (currentView === 'join') {\r\n    return (\r\n      <Join\r\n        username={username}\r\n        setUsername={setUsername}\r\n        roomId={roomId}\r\n        roomExists={roomExists}\r\n        joinRoom={joinRoom}\r\n        setCurrentView={setCurrentView}\r\n      />\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Chat\r\n      socket={socket}\r\n      username={username}\r\n      roomId={roomId}\r\n      roomName={roomName}\r\n      messages={messages}\r\n      setMessages={setMessages}\r\n      users={users}\r\n      setUsers={setUsers}\r\n      isAdmin={isAdmin}\r\n      setIsAdmin={setIsAdmin}\r\n      isSeniorMod={isSeniorMod}\r\n      setIsSeniorMod={setIsSeniorMod}\r\n      isModerator={isModerator}\r\n      setIsModerator={setIsModerator}\r\n      roomSettings={roomSettings}\r\n      setRoomSettings={setRoomSettings}\r\n      bannedUsers={bannedUsers}\r\n      setBannedUsers={setBannedUsers}\r\n      userJoinTime={userJoinTime}\r\n      setCurrentView={setCurrentView}\r\n      callState={callState}\r\n      setCallState={setCallState}\r\n      encrypt={encrypt}\r\n      resetState={resetState}\r\n    />\r\n  );\r\n}\r\n\r\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}