{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\natol\\\\OneDrive\\\\Desktop\\\\ghostschat\\\\ghostschat-frontend\\\\src\\\\components\\\\CallRoom.js\",\n  _s = $RefreshSig$();\n// src/components/CallRoom.js\nimport React, { useState, useEffect, useRef } from 'react';\nimport Peer from 'simple-peer';\nimport { Mic, MicOff, Users } from 'lucide-react';\nimport { THEMES } from '../constants';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CallRoom = ({\n  socket,\n  roomId,\n  username,\n  users,\n  callState\n}) => {\n  _s();\n  const [peers, setPeers] = useState([]);\n  const [isMuted, setIsMuted] = useState(false);\n  const userAudio = useRef(null);\n  const peersRef = useRef([]);\n  const streamRef = useRef(null);\n  const currentTheme = THEMES.default;\n  useEffect(() => {\n    const initCall = async () => {\n      try {\n        const stream = await navigator.mediaDevices.getUserMedia({\n          audio: true\n        });\n        streamRef.current = stream;\n        if (userAudio.current) {\n          userAudio.current.srcObject = stream;\n        }\n        socket.emit('joinCall', {\n          roomId\n        });\n        const isHost = callState.hostId === socket.id;\n        if (isHost) {\n          socket.emit('startCall', {\n            roomId\n          });\n        }\n        socket.on('callParticipantJoined', ({\n          userId,\n          username: joinedUsername\n        }) => {\n          const peer = createPeer(userId, socket.id, stream);\n          peersRef.current.push({\n            peerID: userId,\n            peer,\n            username: joinedUsername\n          });\n          setPeers(prev => [...prev, {\n            peerID: userId,\n            peer,\n            username: joinedUsername\n          }]);\n        });\n        socket.on('callParticipantLeft', ({\n          userId\n        }) => {\n          const peerObj = peersRef.current.find(p => p.peerID === userId);\n          if (peerObj) {\n            peerObj.peer.destroy();\n          }\n          peersRef.current = peersRef.current.filter(p => p.peerID !== userId);\n          setPeers(prev => prev.filter(p => p.peerID !== userId));\n        });\n        socket.on('callSignal', ({\n          signal,\n          from\n        }) => {\n          const peerObj = peersRef.current.find(p => p.peerID === from);\n          if (peerObj) {\n            peerObj.peer.signal(signal);\n          } else {\n            var _users$find;\n            const peer = addPeer(signal, from, stream);\n            peersRef.current.push({\n              peerID: from,\n              peer,\n              username: ((_users$find = users.find(u => u.id === from)) === null || _users$find === void 0 ? void 0 : _users$find.username) || 'Unknown'\n            });\n            setPeers(prev => {\n              var _users$find2;\n              return [...prev, {\n                peerID: from,\n                peer,\n                username: ((_users$find2 = users.find(u => u.id === from)) === null || _users$find2 === void 0 ? void 0 : _users$find2.username) || 'Unknown'\n              }];\n            });\n          }\n        });\n        socket.on('callEnded', () => {\n          cleanup();\n        });\n        socket.on('callHostChanged', ({\n          newHostId\n        }) => {\n          if (newHostId === socket.id) {\n            peersRef.current.forEach(({\n              peer,\n              peerID\n            }) => {\n              peer.signal(JSON.stringify(peer.localDescription));\n            });\n          }\n        });\n        callState.participants.forEach(participantId => {\n          if (participantId !== socket.id) {\n            var _users$find3;\n            const peer = createPeer(participantId, socket.id, stream);\n            peersRef.current.push({\n              peerID: participantId,\n              peer,\n              username: ((_users$find3 = users.find(u => u.id === participantId)) === null || _users$find3 === void 0 ? void 0 : _users$find3.username) || 'Unknown'\n            });\n            setPeers(prev => {\n              var _users$find4;\n              return [...prev, {\n                peerID: participantId,\n                peer,\n                username: ((_users$find4 = users.find(u => u.id === participantId)) === null || _users$find4 === void 0 ? void 0 : _users$find4.username) || 'Unknown'\n              }];\n            });\n          }\n        });\n      } catch (err) {\n        console.error('Error accessing media devices:', err);\n      }\n    };\n    initCall();\n    return () => {\n      cleanup();\n      socket.off('callParticipantJoined');\n      socket.off('callParticipantLeft');\n      socket.off('callSignal');\n      socket.off('callEnded');\n      socket.off('callHostChanged');\n    };\n  }, [socket, roomId, callState, users]);\n  const createPeer = (userToSignal, callerID, stream) => {\n    const peer = new Peer({\n      initiator: true,\n      trickle: false,\n      stream,\n      config: {\n        iceServers: [{\n          urls: 'stun:stun.l.google.com:19302'\n        }, {\n          urls: 'stun:stun1.l.google.com:19302'\n        }]\n      }\n    });\n    peer.on('signal', signal => {\n      socket.emit('callSignal', {\n        roomId,\n        signal,\n        to: userToSignal\n      });\n    });\n    peer.on('error', err => {\n      console.error('Peer error:', err);\n      cleanupPeer(userToSignal);\n    });\n    return peer;\n  };\n  const addPeer = (incomingSignal, callerID, stream) => {\n    const peer = new Peer({\n      initiator: false,\n      trickle: false,\n      stream,\n      config: {\n        iceServers: [{\n          urls: 'stun:stun.l.google.com:19302'\n        }, {\n          urls: 'stun:stun1.l.google.com:19302'\n        }]\n      }\n    });\n    peer.on('signal', signal => {\n      socket.emit('callSignal', {\n        roomId,\n        signal,\n        to: callerID\n      });\n    });\n    peer.on('error', err => {\n      console.error('Peer error:', err);\n      cleanupPeer(callerID);\n    });\n    peer.signal(incomingSignal);\n    return peer;\n  };\n  const cleanupPeer = peerID => {\n    const peerObj = peersRef.current.find(p => p.peerID === peerID);\n    if (peerObj) {\n      peerObj.peer.destroy();\n      peersRef.current = peersRef.current.filter(p => p.peerID !== peerID);\n      setPeers(prev => prev.filter(p => p.peerID !== peerID));\n    }\n  };\n  const cleanup = () => {\n    if (streamRef.current) {\n      streamRef.current.getTracks().forEach(track => {\n        track.stop();\n      });\n      streamRef.current = null;\n    }\n    peersRef.current.forEach(({\n      peer\n    }) => {\n      peer.destroy();\n    });\n    peersRef.current = [];\n    setPeers([]);\n    if (userAudio.current) {\n      userAudio.current.srcObject = null;\n    }\n  };\n  const toggleMute = () => {\n    if (streamRef.current) {\n      streamRef.current.getAudioTracks().forEach(track => {\n        track.enabled = !track.enabled;\n      });\n      setIsMuted(!isMuted);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `flex-1 ${currentTheme.card} p-4 overflow-y-auto scrollbar-thin scrollbar-thumb-ghost-600 scrollbar-track-ghost-800`,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-center justify-between mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: `text-lg font-bold ${currentTheme.textPrimary} gradient-text`,\n        children: \"Voice Call\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: toggleMute,\n        className: `${currentTheme.buttonSecondary} rounded-xl p-2 flex items-center space-x-2 ${currentTheme.hover} transition-all duration-200`,\n        children: [isMuted ? /*#__PURE__*/_jsxDEV(MicOff, {\n          className: \"w-5 h-5\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 22\n        }, this) : /*#__PURE__*/_jsxDEV(Mic, {\n          className: \"w-5 h-5\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 55\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: isMuted ? 'Unmute' : 'Mute'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"space-y-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${currentTheme.buttonSecondary} rounded-xl p-3 flex items-center space-x-2`,\n        children: [/*#__PURE__*/_jsxDEV(Users, {\n          className: \"w-5 h-5 text-purple-400\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: `${currentTheme.textPrimary} text-sm`,\n          children: [username, \" (You)\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"audio\", {\n          ref: userAudio,\n          autoPlay: true,\n          muted: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 9\n      }, this), peers.map(({\n        peerID,\n        peer,\n        username: peerUsername\n      }) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${currentTheme.buttonSecondary} rounded-xl p-3 flex items-center space-x-2`,\n        children: [/*#__PURE__*/_jsxDEV(Users, {\n          className: \"w-5 h-5 text-purple-400\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: `${currentTheme.textPrimary} text-sm`,\n          children: peerUsername\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"audio\", {\n          autoPlay: true,\n          ref: el => el && (el.srcObject = peer.streams[0])\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 13\n        }, this)]\n      }, peerID, true, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 202,\n    columnNumber: 5\n  }, this);\n};\n_s(CallRoom, \"ETWmzBsW3a+SKcGiEHvW8qQ6ghI=\");\n_c = CallRoom;\nexport default CallRoom;\nvar _c;\n$RefreshReg$(_c, \"CallRoom\");","map":{"version":3,"names":["React","useState","useEffect","useRef","Peer","Mic","MicOff","Users","THEMES","jsxDEV","_jsxDEV","CallRoom","socket","roomId","username","users","callState","_s","peers","setPeers","isMuted","setIsMuted","userAudio","peersRef","streamRef","currentTheme","default","initCall","stream","navigator","mediaDevices","getUserMedia","audio","current","srcObject","emit","isHost","hostId","id","on","userId","joinedUsername","peer","createPeer","push","peerID","prev","peerObj","find","p","destroy","filter","signal","from","_users$find","addPeer","u","_users$find2","cleanup","newHostId","forEach","JSON","stringify","localDescription","participants","participantId","_users$find3","_users$find4","err","console","error","off","userToSignal","callerID","initiator","trickle","config","iceServers","urls","to","cleanupPeer","incomingSignal","getTracks","track","stop","toggleMute","getAudioTracks","enabled","className","card","children","textPrimary","fileName","_jsxFileName","lineNumber","columnNumber","onClick","buttonSecondary","hover","ref","autoPlay","muted","map","peerUsername","el","streams","_c","$RefreshReg$"],"sources":["C:/Users/natol/OneDrive/Desktop/ghostschat/ghostschat-frontend/src/components/CallRoom.js"],"sourcesContent":["// src/components/CallRoom.js\r\nimport React, { useState, useEffect, useRef } from 'react';\r\nimport Peer from 'simple-peer';\r\nimport { Mic, MicOff, Users } from 'lucide-react';\r\nimport { THEMES } from '../constants';\r\n\r\nconst CallRoom = ({ socket, roomId, username, users, callState }) => {\r\n  const [peers, setPeers] = useState([]);\r\n  const [isMuted, setIsMuted] = useState(false);\r\n  const userAudio = useRef(null);\r\n  const peersRef = useRef([]);\r\n  const streamRef = useRef(null);\r\n  const currentTheme = THEMES.default;\r\n\r\n  useEffect(() => {\r\n    const initCall = async () => {\r\n      try {\r\n        const stream = await navigator.mediaDevices.getUserMedia({ audio: true });\r\n        streamRef.current = stream;\r\n        if (userAudio.current) {\r\n          userAudio.current.srcObject = stream;\r\n        }\r\n\r\n        socket.emit('joinCall', { roomId });\r\n\r\n        const isHost = callState.hostId === socket.id;\r\n        if (isHost) {\r\n          socket.emit('startCall', { roomId });\r\n        }\r\n\r\n        socket.on('callParticipantJoined', ({ userId, username: joinedUsername }) => {\r\n          const peer = createPeer(userId, socket.id, stream);\r\n          peersRef.current.push({\r\n            peerID: userId,\r\n            peer,\r\n            username: joinedUsername,\r\n          });\r\n          setPeers((prev) => [...prev, { peerID: userId, peer, username: joinedUsername }]);\r\n        });\r\n\r\n        socket.on('callParticipantLeft', ({ userId }) => {\r\n          const peerObj = peersRef.current.find((p) => p.peerID === userId);\r\n          if (peerObj) {\r\n            peerObj.peer.destroy();\r\n          }\r\n          peersRef.current = peersRef.current.filter((p) => p.peerID !== userId);\r\n          setPeers((prev) => prev.filter((p) => p.peerID !== userId));\r\n        });\r\n\r\n        socket.on('callSignal', ({ signal, from }) => {\r\n          const peerObj = peersRef.current.find((p) => p.peerID === from);\r\n          if (peerObj) {\r\n            peerObj.peer.signal(signal);\r\n          } else {\r\n            const peer = addPeer(signal, from, stream);\r\n            peersRef.current.push({\r\n              peerID: from,\r\n              peer,\r\n              username: users.find((u) => u.id === from)?.username || 'Unknown',\r\n            });\r\n            setPeers((prev) => [\r\n              ...prev,\r\n              { peerID: from, peer, username: users.find((u) => u.id === from)?.username || 'Unknown' },\r\n            ]);\r\n          }\r\n        });\r\n\r\n        socket.on('callEnded', () => {\r\n          cleanup();\r\n        });\r\n\r\n        socket.on('callHostChanged', ({ newHostId }) => {\r\n          if (newHostId === socket.id) {\r\n            peersRef.current.forEach(({ peer, peerID }) => {\r\n              peer.signal(JSON.stringify(peer.localDescription));\r\n            });\r\n          }\r\n        });\r\n\r\n        callState.participants.forEach((participantId) => {\r\n          if (participantId !== socket.id) {\r\n            const peer = createPeer(participantId, socket.id, stream);\r\n            peersRef.current.push({\r\n              peerID: participantId,\r\n              peer,\r\n              username: users.find((u) => u.id === participantId)?.username || 'Unknown',\r\n            });\r\n            setPeers((prev) => [\r\n              ...prev,\r\n              {\r\n                peerID: participantId,\r\n                peer,\r\n                username: users.find((u) => u.id === participantId)?.username || 'Unknown',\r\n              },\r\n            ]);\r\n          }\r\n        });\r\n      } catch (err) {\r\n        console.error('Error accessing media devices:', err);\r\n      }\r\n    };\r\n\r\n    initCall();\r\n\r\n    return () => {\r\n      cleanup();\r\n      socket.off('callParticipantJoined');\r\n      socket.off('callParticipantLeft');\r\n      socket.off('callSignal');\r\n      socket.off('callEnded');\r\n      socket.off('callHostChanged');\r\n    };\r\n  }, [socket, roomId, callState, users]);\r\n\r\n  const createPeer = (userToSignal, callerID, stream) => {\r\n    const peer = new Peer({\r\n      initiator: true,\r\n      trickle: false,\r\n      stream,\r\n      config: {\r\n        iceServers: [\r\n          { urls: 'stun:stun.l.google.com:19302' },\r\n          { urls: 'stun:stun1.l.google.com:19302' },\r\n        ],\r\n      },\r\n    });\r\n\r\n    peer.on('signal', (signal) => {\r\n      socket.emit('callSignal', { roomId, signal, to: userToSignal });\r\n    });\r\n\r\n    peer.on('error', (err) => {\r\n      console.error('Peer error:', err);\r\n      cleanupPeer(userToSignal);\r\n    });\r\n\r\n    return peer;\r\n  };\r\n\r\n  const addPeer = (incomingSignal, callerID, stream) => {\r\n    const peer = new Peer({\r\n      initiator: false,\r\n      trickle: false,\r\n      stream,\r\n      config: {\r\n        iceServers: [\r\n          { urls: 'stun:stun.l.google.com:19302' },\r\n          { urls: 'stun:stun1.l.google.com:19302' },\r\n        ],\r\n      },\r\n    });\r\n\r\n    peer.on('signal', (signal) => {\r\n      socket.emit('callSignal', { roomId, signal, to: callerID });\r\n    });\r\n\r\n    peer.on('error', (err) => {\r\n      console.error('Peer error:', err);\r\n      cleanupPeer(callerID);\r\n    });\r\n\r\n    peer.signal(incomingSignal);\r\n    return peer;\r\n  };\r\n\r\n  const cleanupPeer = (peerID) => {\r\n    const peerObj = peersRef.current.find((p) => p.peerID === peerID);\r\n    if (peerObj) {\r\n      peerObj.peer.destroy();\r\n      peersRef.current = peersRef.current.filter((p) => p.peerID !== peerID);\r\n      setPeers((prev) => prev.filter((p) => p.peerID !== peerID));\r\n    }\r\n  };\r\n\r\n  const cleanup = () => {\r\n    if (streamRef.current) {\r\n      streamRef.current.getTracks().forEach((track) => {\r\n        track.stop();\r\n      });\r\n      streamRef.current = null;\r\n    }\r\n    peersRef.current.forEach(({ peer }) => {\r\n      peer.destroy();\r\n    });\r\n    peersRef.current = [];\r\n    setPeers([]);\r\n    if (userAudio.current) {\r\n      userAudio.current.srcObject = null;\r\n    }\r\n  };\r\n\r\n  const toggleMute = () => {\r\n    if (streamRef.current) {\r\n      streamRef.current.getAudioTracks().forEach((track) => {\r\n        track.enabled = !track.enabled;\r\n      });\r\n      setIsMuted(!isMuted);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={`flex-1 ${currentTheme.card} p-4 overflow-y-auto scrollbar-thin scrollbar-thumb-ghost-600 scrollbar-track-ghost-800`}>\r\n      <div className=\"flex items-center justify-between mb-4\">\r\n        <h2 className={`text-lg font-bold ${currentTheme.textPrimary} gradient-text`}>Voice Call</h2>\r\n        <button\r\n          onClick={toggleMute}\r\n          className={`${currentTheme.buttonSecondary} rounded-xl p-2 flex items-center space-x-2 ${currentTheme.hover} transition-all duration-200`}\r\n        >\r\n          {isMuted ? <MicOff className=\"w-5 h-5\" /> : <Mic className=\"w-5 h-5\" />}\r\n          <span>{isMuted ? 'Unmute' : 'Mute'}</span>\r\n        </button>\r\n      </div>\r\n\r\n      <div className=\"space-y-4\">\r\n        <div className={`${currentTheme.buttonSecondary} rounded-xl p-3 flex items-center space-x-2`}>\r\n          <Users className=\"w-5 h-5 text-purple-400\" />\r\n          <span className={`${currentTheme.textPrimary} text-sm`}>{username} (You)</span>\r\n          <audio ref={userAudio} autoPlay muted />\r\n        </div>\r\n        {peers.map(({ peerID, peer, username: peerUsername }) => (\r\n          <div key={peerID} className={`${currentTheme.buttonSecondary} rounded-xl p-3 flex items-center space-x-2`}>\r\n            <Users className=\"w-5 h-5 text-purple-400\" />\r\n            <span className={`${currentTheme.textPrimary} text-sm`}>{peerUsername}</span>\r\n            <audio autoPlay ref={(el) => el && (el.srcObject = peer.streams[0])} />\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CallRoom;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}