{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\natol\\\\OneDrive\\\\Desktop\\\\ghostschat\\\\ghostschat-frontend\\\\src\\\\components\\\\CallRoom.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef, useCallback } from 'react';\nimport { Mic, MicOff, Users } from 'lucide-react';\nimport Peer from 'simple-peer';\nimport { THEMES } from '../constants';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CallRoom = ({\n  socket,\n  roomId,\n  username,\n  users,\n  callState\n}) => {\n  _s();\n  const [participants, setParticipants] = useState([]);\n  const [isMuted, setIsMuted] = useState(false);\n  const userAudio = useRef(null);\n  const peersRef = useRef([]);\n  const streamRef = useRef(null);\n  const currentTheme = THEMES.default;\n\n  // Cleanup a specific peer\n  const cleanupPeer = useCallback(peerID => {\n    const peerObj = peersRef.current.find(p => p.peerID === peerID);\n    if (peerObj) {\n      peerObj.peer.destroy();\n      peersRef.current = peersRef.current.filter(p => p.peerID !== peerID);\n    }\n    // Don't remove from participants - they might still be in the call\n  }, []);\n\n  // Full cleanup\n  const cleanup = useCallback(() => {\n    if (streamRef.current) {\n      streamRef.current.getTracks().forEach(track => track.stop());\n      streamRef.current = null;\n    }\n    peersRef.current.forEach(({\n      peer\n    }) => peer.destroy());\n    peersRef.current = [];\n    if (userAudio.current) {\n      userAudio.current.srcObject = null;\n    }\n  }, []);\n  const createPeer = useCallback((userToSignal, callerID, stream) => {\n    const existingPeer = peersRef.current.find(p => p.peerID === userToSignal);\n    if (existingPeer) return existingPeer.peer;\n    const peer = new Peer({\n      initiator: true,\n      trickle: true,\n      // Changed to true for better connection handling\n      stream,\n      config: {\n        iceServers: [{\n          urls: 'stun:stun.l.google.com:19302'\n        }, {\n          urls: 'stun:stun1.l.google.com:19302'\n        }]\n      }\n    });\n    peer.on('signal', signal => {\n      socket.emit('callSignal', {\n        roomId,\n        signal,\n        to: userToSignal\n      });\n    });\n    peer.on('connect', () => {\n      console.log('Peer connected:', userToSignal);\n      updateParticipantStatus(userToSignal, 'connected');\n    });\n    peer.on('error', err => {\n      console.error('Peer error:', err);\n      updateParticipantStatus(userToSignal, 'disconnected');\n      cleanupPeer(userToSignal);\n    });\n    peer.on('close', () => {\n      updateParticipantStatus(userToSignal, 'disconnected');\n      cleanupPeer(userToSignal);\n    });\n    return peer;\n  }, [socket, roomId, cleanupPeer]);\n  const addPeer = useCallback((incomingSignal, callerID, stream) => {\n    const existingPeer = peersRef.current.find(p => p.peerID === callerID);\n    if (existingPeer) return existingPeer.peer;\n    const peer = new Peer({\n      initiator: false,\n      trickle: true,\n      // Changed to true for better connection handling\n      stream,\n      config: {\n        iceServers: [{\n          urls: 'stun:stun.l.google.com:19302'\n        }, {\n          urls: 'stun:stun1.l.google.com:19302'\n        }]\n      }\n    });\n    peer.on('signal', signal => {\n      socket.emit('callSignal', {\n        roomId,\n        signal,\n        to: callerID\n      });\n    });\n    peer.on('connect', () => {\n      console.log('Peer connected:', callerID);\n      updateParticipantStatus(callerID, 'connected');\n    });\n    peer.on('error', err => {\n      console.error('Peer error:', err);\n      updateParticipantStatus(callerID, 'disconnected');\n      cleanupPeer(callerID);\n    });\n    peer.on('close', () => {\n      updateParticipantStatus(callerID, 'disconnected');\n      cleanupPeer(callerID);\n    });\n\n    // Handle signaling with retries for stability\n    const signalWithRetry = () => {\n      try {\n        peer.signal(incomingSignal);\n      } catch (err) {\n        console.error('Signaling error, retrying...', err);\n        if (peer.destroyed) return;\n        setTimeout(signalWithRetry, 500);\n      }\n    };\n    signalWithRetry();\n    return peer;\n  }, [socket, roomId, cleanupPeer]);\n\n  // Update participant connection status\n  const updateParticipantStatus = (peerID, status) => {\n    setParticipants(prev => prev.map(p => p.peerID === peerID ? {\n      ...p,\n      connectionStatus: status\n    } : p));\n  };\n\n  // Get all participants including connection status\n  const updateAllParticipants = useCallback(() => {\n    // Start with current user\n    const allParticipants = [{\n      peerID: socket.id,\n      username,\n      isSelf: true,\n      connectionStatus: 'connected'\n    }];\n\n    // Add all call participants\n    callState.participants.forEach(participantId => {\n      if (participantId !== socket.id) {\n        const existingPeer = peersRef.current.find(p => p.peerID === participantId);\n        const existingParticipant = allParticipants.find(p => p.peerID === participantId);\n        if (!existingParticipant) {\n          var _users$find;\n          allParticipants.push({\n            peerID: participantId,\n            username: ((_users$find = users.find(u => u.id === participantId)) === null || _users$find === void 0 ? void 0 : _users$find.username) || 'Unknown',\n            isSelf: false,\n            connectionStatus: existingPeer ? 'connected' : 'connecting'\n          });\n        }\n      }\n    });\n    setParticipants(allParticipants);\n  }, [socket.id, username, callState.participants, users]);\n  useEffect(() => {\n    const initCall = async () => {\n      try {\n        const stream = await navigator.mediaDevices.getUserMedia({\n          audio: true\n        });\n        streamRef.current = stream;\n        if (userAudio.current) {\n          userAudio.current.srcObject = stream;\n        }\n\n        // Initialize all participants\n        updateAllParticipants();\n\n        // Create peer connections for existing participants\n        callState.participants.filter(participantId => participantId !== socket.id).forEach(participantId => {\n          var _users$find2;\n          const peer = createPeer(participantId, socket.id, stream);\n          peersRef.current.push({\n            peerID: participantId,\n            peer,\n            username: ((_users$find2 = users.find(u => u.id === participantId)) === null || _users$find2 === void 0 ? void 0 : _users$find2.username) || 'Unknown'\n          });\n        });\n      } catch (err) {\n        console.error('Error accessing media devices:', err);\n      }\n    };\n    const handleCallSignal = ({\n      signal,\n      from\n    }) => {\n      if (!streamRef.current) return;\n      const peerObj = peersRef.current.find(p => p.peerID === from);\n      if (peerObj) {\n        try {\n          peerObj.peer.signal(signal);\n        } catch (err) {\n          console.error('Error signaling existing peer:', err);\n          updateParticipantStatus(from, 'disconnected');\n          cleanupPeer(from);\n        }\n      } else {\n        var _users$find3;\n        const peer = addPeer(signal, from, streamRef.current);\n        peersRef.current.push({\n          peerID: from,\n          peer,\n          username: ((_users$find3 = users.find(u => u.id === from)) === null || _users$find3 === void 0 ? void 0 : _users$find3.username) || 'Unknown'\n        });\n      }\n      updateAllParticipants();\n    };\n    const handleParticipantJoined = ({\n      userId,\n      username: joinedUsername\n    }) => {\n      if (userId !== socket.id && streamRef.current) {\n        const peer = createPeer(userId, socket.id, streamRef.current);\n        peersRef.current.push({\n          peerID: userId,\n          peer,\n          username: joinedUsername\n        });\n      }\n      updateAllParticipants();\n    };\n    const handleParticipantLeft = ({\n      userId\n    }) => {\n      cleanupPeer(userId);\n      // Keep them in the list but mark as disconnected\n      updateParticipantStatus(userId, 'left');\n    };\n    initCall();\n    socket.on('callSignal', handleCallSignal);\n    socket.on('callParticipantJoined', handleParticipantJoined);\n    socket.on('callParticipantLeft', handleParticipantLeft);\n    socket.on('callEnded', cleanup);\n\n    // Periodic participant list refresh\n    const interval = setInterval(updateAllParticipants, 5000);\n    return () => {\n      cleanup();\n      clearInterval(interval);\n      socket.off('callSignal', handleCallSignal);\n      socket.off('callParticipantJoined', handleParticipantJoined);\n      socket.off('callParticipantLeft', handleParticipantLeft);\n      socket.off('callEnded', cleanup);\n    };\n  }, [socket, roomId, callState, users, createPeer, addPeer, cleanup, cleanupPeer, updateAllParticipants]);\n  const toggleMute = () => {\n    if (streamRef.current) {\n      streamRef.current.getAudioTracks().forEach(track => {\n        track.enabled = !track.enabled;\n      });\n      setIsMuted(!isMuted);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `flex-1 ${currentTheme.card} p-4 overflow-y-auto scrollbar-thin scrollbar-thumb-ghost-600 scrollbar-track-ghost-800`,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-center justify-between mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: `text-lg font-bold ${currentTheme.textPrimary} gradient-text`,\n        children: \"Voice Call\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: toggleMute,\n        className: `${currentTheme.buttonSecondary} rounded-xl p-2 flex items-center space-x-2 ${currentTheme.hover} transition-all duration-200`,\n        children: [isMuted ? /*#__PURE__*/_jsxDEV(MicOff, {\n          className: \"w-5 h-5\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 22\n        }, this) : /*#__PURE__*/_jsxDEV(Mic, {\n          className: \"w-5 h-5\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 55\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: isMuted ? 'Unmute' : 'Mute'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"space-y-4\",\n      children: participants.map(({\n        peerID,\n        username: participantUsername,\n        isSelf,\n        connectionStatus\n      }) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${currentTheme.buttonSecondary} rounded-xl p-3 flex items-center space-x-2`,\n        children: [/*#__PURE__*/_jsxDEV(Users, {\n          className: \"w-5 h-5\",\n          style: {\n            color: connectionStatus === 'connected' ? '#4ade80' : connectionStatus === 'connecting' ? '#fbbf24' : '#f87171'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: `${currentTheme.textPrimary} text-sm`,\n          children: [participantUsername, \" \", isSelf && '(You)']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 13\n        }, this), !isSelf && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-xs ml-2\",\n          style: {\n            color: connectionStatus === 'connected' ? '#4ade80' : connectionStatus === 'connecting' ? '#fbbf24' : '#f87171'\n          },\n          children: connectionStatus === 'connected' ? 'Connected' : connectionStatus === 'connecting' ? 'Connecting...' : 'Disconnected'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 15\n        }, this), isSelf && /*#__PURE__*/_jsxDEV(\"audio\", {\n          ref: userAudio,\n          autoPlay: true,\n          muted: isMuted\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 304,\n          columnNumber: 24\n        }, this)]\n      }, `${peerID}-${participantUsername}`, true, {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 267,\n    columnNumber: 5\n  }, this);\n};\n_s(CallRoom, \"C7jh8u+vTNwnK0wa/8SD4DqyiTM=\");\n_c = CallRoom;\nexport default CallRoom;\nvar _c;\n$RefreshReg$(_c, \"CallRoom\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useCallback","Mic","MicOff","Users","Peer","THEMES","jsxDEV","_jsxDEV","CallRoom","socket","roomId","username","users","callState","_s","participants","setParticipants","isMuted","setIsMuted","userAudio","peersRef","streamRef","currentTheme","default","cleanupPeer","peerID","peerObj","current","find","p","peer","destroy","filter","cleanup","getTracks","forEach","track","stop","srcObject","createPeer","userToSignal","callerID","stream","existingPeer","initiator","trickle","config","iceServers","urls","on","signal","emit","to","console","log","updateParticipantStatus","err","error","addPeer","incomingSignal","signalWithRetry","destroyed","setTimeout","status","prev","map","connectionStatus","updateAllParticipants","allParticipants","id","isSelf","participantId","existingParticipant","_users$find","push","u","initCall","navigator","mediaDevices","getUserMedia","audio","_users$find2","handleCallSignal","from","_users$find3","handleParticipantJoined","userId","joinedUsername","handleParticipantLeft","interval","setInterval","clearInterval","off","toggleMute","getAudioTracks","enabled","className","card","children","textPrimary","fileName","_jsxFileName","lineNumber","columnNumber","onClick","buttonSecondary","hover","participantUsername","style","color","ref","autoPlay","muted","_c","$RefreshReg$"],"sources":["C:/Users/natol/OneDrive/Desktop/ghostschat/ghostschat-frontend/src/components/CallRoom.js"],"sourcesContent":["import React, { useState, useEffect, useRef, useCallback } from 'react';\r\nimport { Mic, MicOff, Users } from 'lucide-react';\r\nimport Peer from 'simple-peer';\r\nimport { THEMES } from '../constants';\r\n\r\nconst CallRoom = ({ socket, roomId, username, users, callState }) => {\r\n  const [participants, setParticipants] = useState([]);\r\n  const [isMuted, setIsMuted] = useState(false);\r\n  const userAudio = useRef(null);\r\n  const peersRef = useRef([]);\r\n  const streamRef = useRef(null);\r\n  const currentTheme = THEMES.default;\r\n\r\n  // Cleanup a specific peer\r\n  const cleanupPeer = useCallback((peerID) => {\r\n    const peerObj = peersRef.current.find(p => p.peerID === peerID);\r\n    if (peerObj) {\r\n      peerObj.peer.destroy();\r\n      peersRef.current = peersRef.current.filter(p => p.peerID !== peerID);\r\n    }\r\n    // Don't remove from participants - they might still be in the call\r\n  }, []);\r\n\r\n  // Full cleanup\r\n  const cleanup = useCallback(() => {\r\n    if (streamRef.current) {\r\n      streamRef.current.getTracks().forEach(track => track.stop());\r\n      streamRef.current = null;\r\n    }\r\n    \r\n    peersRef.current.forEach(({ peer }) => peer.destroy());\r\n    peersRef.current = [];\r\n    \r\n    if (userAudio.current) {\r\n      userAudio.current.srcObject = null;\r\n    }\r\n  }, []);\r\n\r\n  const createPeer = useCallback((userToSignal, callerID, stream) => {\r\n    const existingPeer = peersRef.current.find(p => p.peerID === userToSignal);\r\n    if (existingPeer) return existingPeer.peer;\r\n\r\n    const peer = new Peer({\r\n      initiator: true,\r\n      trickle: true, // Changed to true for better connection handling\r\n      stream,\r\n      config: {\r\n        iceServers: [\r\n          { urls: 'stun:stun.l.google.com:19302' },\r\n          { urls: 'stun:stun1.l.google.com:19302' }\r\n        ]\r\n      }\r\n    });\r\n\r\n    peer.on('signal', signal => {\r\n      socket.emit('callSignal', { roomId, signal, to: userToSignal });\r\n    });\r\n\r\n    peer.on('connect', () => {\r\n      console.log('Peer connected:', userToSignal);\r\n      updateParticipantStatus(userToSignal, 'connected');\r\n    });\r\n\r\n    peer.on('error', err => {\r\n      console.error('Peer error:', err);\r\n      updateParticipantStatus(userToSignal, 'disconnected');\r\n      cleanupPeer(userToSignal);\r\n    });\r\n\r\n    peer.on('close', () => {\r\n      updateParticipantStatus(userToSignal, 'disconnected');\r\n      cleanupPeer(userToSignal);\r\n    });\r\n\r\n    return peer;\r\n  }, [socket, roomId, cleanupPeer]);\r\n\r\n  const addPeer = useCallback((incomingSignal, callerID, stream) => {\r\n    const existingPeer = peersRef.current.find(p => p.peerID === callerID);\r\n    if (existingPeer) return existingPeer.peer;\r\n\r\n    const peer = new Peer({\r\n      initiator: false,\r\n      trickle: true, // Changed to true for better connection handling\r\n      stream,\r\n      config: {\r\n        iceServers: [\r\n          { urls: 'stun:stun.l.google.com:19302' },\r\n          { urls: 'stun:stun1.l.google.com:19302' }\r\n        ]\r\n      }\r\n    });\r\n\r\n    peer.on('signal', signal => {\r\n      socket.emit('callSignal', { roomId, signal, to: callerID });\r\n    });\r\n\r\n    peer.on('connect', () => {\r\n      console.log('Peer connected:', callerID);\r\n      updateParticipantStatus(callerID, 'connected');\r\n    });\r\n\r\n    peer.on('error', err => {\r\n      console.error('Peer error:', err);\r\n      updateParticipantStatus(callerID, 'disconnected');\r\n      cleanupPeer(callerID);\r\n    });\r\n\r\n    peer.on('close', () => {\r\n      updateParticipantStatus(callerID, 'disconnected');\r\n      cleanupPeer(callerID);\r\n    });\r\n\r\n    // Handle signaling with retries for stability\r\n    const signalWithRetry = () => {\r\n      try {\r\n        peer.signal(incomingSignal);\r\n      } catch (err) {\r\n        console.error('Signaling error, retrying...', err);\r\n        if (peer.destroyed) return;\r\n        setTimeout(signalWithRetry, 500);\r\n      }\r\n    };\r\n\r\n    signalWithRetry();\r\n    \r\n    return peer;\r\n  }, [socket, roomId, cleanupPeer]);\r\n\r\n  // Update participant connection status\r\n  const updateParticipantStatus = (peerID, status) => {\r\n    setParticipants(prev => prev.map(p => \r\n      p.peerID === peerID ? { ...p, connectionStatus: status } : p\r\n    ));\r\n  };\r\n\r\n  // Get all participants including connection status\r\n  const updateAllParticipants = useCallback(() => {\r\n    // Start with current user\r\n    const allParticipants = [{ \r\n      peerID: socket.id, \r\n      username,\r\n      isSelf: true,\r\n      connectionStatus: 'connected'\r\n    }];\r\n\r\n    // Add all call participants\r\n    callState.participants.forEach(participantId => {\r\n      if (participantId !== socket.id) {\r\n        const existingPeer = peersRef.current.find(p => p.peerID === participantId);\r\n        const existingParticipant = allParticipants.find(p => p.peerID === participantId);\r\n        \r\n        if (!existingParticipant) {\r\n          allParticipants.push({\r\n            peerID: participantId,\r\n            username: users.find(u => u.id === participantId)?.username || 'Unknown',\r\n            isSelf: false,\r\n            connectionStatus: existingPeer ? 'connected' : 'connecting'\r\n          });\r\n        }\r\n      }\r\n    });\r\n\r\n    setParticipants(allParticipants);\r\n  }, [socket.id, username, callState.participants, users]);\r\n\r\n  useEffect(() => {\r\n    const initCall = async () => {\r\n      try {\r\n        const stream = await navigator.mediaDevices.getUserMedia({ audio: true });\r\n        streamRef.current = stream;\r\n        if (userAudio.current) {\r\n          userAudio.current.srcObject = stream;\r\n        }\r\n\r\n        // Initialize all participants\r\n        updateAllParticipants();\r\n\r\n        // Create peer connections for existing participants\r\n        callState.participants\r\n          .filter(participantId => participantId !== socket.id)\r\n          .forEach(participantId => {\r\n            const peer = createPeer(participantId, socket.id, stream);\r\n            peersRef.current.push({\r\n              peerID: participantId,\r\n              peer,\r\n              username: users.find(u => u.id === participantId)?.username || 'Unknown',\r\n            });\r\n          });\r\n\r\n      } catch (err) {\r\n        console.error('Error accessing media devices:', err);\r\n      }\r\n    };\r\n\r\n    const handleCallSignal = ({ signal, from }) => {\r\n      if (!streamRef.current) return;\r\n      \r\n      const peerObj = peersRef.current.find(p => p.peerID === from);\r\n      if (peerObj) {\r\n        try {\r\n          peerObj.peer.signal(signal);\r\n        } catch (err) {\r\n          console.error('Error signaling existing peer:', err);\r\n          updateParticipantStatus(from, 'disconnected');\r\n          cleanupPeer(from);\r\n        }\r\n      } else {\r\n        const peer = addPeer(signal, from, streamRef.current);\r\n        peersRef.current.push({\r\n          peerID: from,\r\n          peer,\r\n          username: users.find(u => u.id === from)?.username || 'Unknown',\r\n        });\r\n      }\r\n      updateAllParticipants();\r\n    };\r\n\r\n    const handleParticipantJoined = ({ userId, username: joinedUsername }) => {\r\n      if (userId !== socket.id && streamRef.current) {\r\n        const peer = createPeer(userId, socket.id, streamRef.current);\r\n        peersRef.current.push({\r\n          peerID: userId,\r\n          peer,\r\n          username: joinedUsername,\r\n        });\r\n      }\r\n      updateAllParticipants();\r\n    };\r\n\r\n    const handleParticipantLeft = ({ userId }) => {\r\n      cleanupPeer(userId);\r\n      // Keep them in the list but mark as disconnected\r\n      updateParticipantStatus(userId, 'left');\r\n    };\r\n\r\n    initCall();\r\n\r\n    socket.on('callSignal', handleCallSignal);\r\n    socket.on('callParticipantJoined', handleParticipantJoined);\r\n    socket.on('callParticipantLeft', handleParticipantLeft);\r\n    socket.on('callEnded', cleanup);\r\n\r\n    // Periodic participant list refresh\r\n    const interval = setInterval(updateAllParticipants, 5000);\r\n\r\n    return () => {\r\n      cleanup();\r\n      clearInterval(interval);\r\n      socket.off('callSignal', handleCallSignal);\r\n      socket.off('callParticipantJoined', handleParticipantJoined);\r\n      socket.off('callParticipantLeft', handleParticipantLeft);\r\n      socket.off('callEnded', cleanup);\r\n    };\r\n  }, [socket, roomId, callState, users, createPeer, addPeer, cleanup, cleanupPeer, updateAllParticipants]);\r\n\r\n  const toggleMute = () => {\r\n    if (streamRef.current) {\r\n      streamRef.current.getAudioTracks().forEach(track => {\r\n        track.enabled = !track.enabled;\r\n      });\r\n      setIsMuted(!isMuted);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={`flex-1 ${currentTheme.card} p-4 overflow-y-auto scrollbar-thin scrollbar-thumb-ghost-600 scrollbar-track-ghost-800`}>\r\n      <div className=\"flex items-center justify-between mb-4\">\r\n        <h2 className={`text-lg font-bold ${currentTheme.textPrimary} gradient-text`}>Voice Call</h2>\r\n        <button\r\n          onClick={toggleMute}\r\n          className={`${currentTheme.buttonSecondary} rounded-xl p-2 flex items-center space-x-2 ${currentTheme.hover} transition-all duration-200`}\r\n        >\r\n          {isMuted ? <MicOff className=\"w-5 h-5\" /> : <Mic className=\"w-5 h-5\" />}\r\n          <span>{isMuted ? 'Unmute' : 'Mute'}</span>\r\n        </button>\r\n      </div>\r\n\r\n      <div className=\"space-y-4\">\r\n        {participants.map(({ peerID, username: participantUsername, isSelf, connectionStatus }) => (\r\n          <div \r\n            key={`${peerID}-${participantUsername}`}\r\n            className={`${currentTheme.buttonSecondary} rounded-xl p-3 flex items-center space-x-2`}\r\n          >\r\n            <Users className=\"w-5 h-5\" style={{\r\n              color: connectionStatus === 'connected' ? '#4ade80' : \r\n                     connectionStatus === 'connecting' ? '#fbbf24' : \r\n                     '#f87171'\r\n            }} />\r\n            <span className={`${currentTheme.textPrimary} text-sm`}>\r\n              {participantUsername} {isSelf && '(You)'}\r\n            </span>\r\n            {!isSelf && (\r\n              <span className=\"text-xs ml-2\" style={{\r\n                color: connectionStatus === 'connected' ? '#4ade80' : \r\n                       connectionStatus === 'connecting' ? '#fbbf24' : \r\n                       '#f87171'\r\n              }}>\r\n                {connectionStatus === 'connected' ? 'Connected' :\r\n                 connectionStatus === 'connecting' ? 'Connecting...' :\r\n                 'Disconnected'}\r\n              </span>\r\n            )}\r\n            {isSelf && <audio ref={userAudio} autoPlay muted={isMuted} />}\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CallRoom;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}